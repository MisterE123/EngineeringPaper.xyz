// Generated from LatexLexer.g4 by ANTLR 4.12.0
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class LatexLexer extends Lexer {
	public static readonly L_BRACKET = 1;
	public static readonly ALT_L_BRACKET = 2;
	public static readonly SEMICOLON = 3;
	public static readonly L_BRACE = 4;
	public static readonly R_BRACE = 5;
	public static readonly L_PAREN = 6;
	public static readonly R_PAREN = 7;
	public static readonly VBAR = 8;
	public static readonly UNDERSCORE = 9;
	public static readonly PI = 10;
	public static readonly CMD_INT = 11;
	public static readonly CMD_MATHRM = 12;
	public static readonly CMD_FRAC = 13;
	public static readonly CMD_CDOT = 14;
	public static readonly CMD_SQRT = 15;
	public static readonly CMD_SIM = 16;
	public static readonly CMD_APPROX = 17;
	public static readonly BACK_SLASH = 18;
	public static readonly CMD_SIN = 19;
	public static readonly CMD_COS = 20;
	public static readonly CMD_TAN = 21;
	public static readonly CMD_COT = 22;
	public static readonly CMD_SEC = 23;
	public static readonly CMD_CSC = 24;
	public static readonly CMD_ARCSIN = 25;
	public static readonly CMD_ARCCOS = 26;
	public static readonly CMD_ARCTAN = 27;
	public static readonly CMD_SINH = 28;
	public static readonly CMD_COSH = 29;
	public static readonly CMD_TANH = 30;
	public static readonly CMD_COTH = 31;
	public static readonly CMD_LN = 32;
	public static readonly CMD_LOG = 33;
	public static readonly CMD_SLASH_LOG_UNDERSCORE = 34;
	public static readonly CMD_LEFT = 35;
	public static readonly CMD_RIGHT = 36;
	public static readonly DOUBLE_DOLLAR_SIGN = 37;
	public static readonly ADD = 38;
	public static readonly SUB = 39;
	public static readonly CARET = 40;
	public static readonly EQ = 41;
	public static readonly LT = 42;
	public static readonly GT = 43;
	public static readonly LTE = 44;
	public static readonly GTE = 45;
	public static readonly COMMA = 46;
	public static readonly SINGLE_CHAR_NUMBER = 47;
	public static readonly NUMBER = 48;
	public static readonly SINGLE_CHAR_ID = 49;
	public static readonly UNDERSCORE_SUBSCRIPT = 50;
	public static readonly CARET_SINGLE_CHAR_ID_UNDERSCORE_SUBSCRIPT = 51;
	public static readonly ID = 52;
	public static readonly WS = 53;
	public static readonly SLASH_SPACE = 54;
	public static readonly SLASH_COLON = 55;
	public static readonly ERROR_CHAR = 56;
	public static readonly R_BRACKET = 57;
	public static readonly ALT_R_BRACKET = 58;
	public static readonly U_CMD_FRAC = 59;
	public static readonly U_CMD_CDOT = 60;
	public static readonly U_CMD_SQRT = 61;
	public static readonly U_CARET = 62;
	public static readonly U_NAME = 63;
	public static readonly U_L_PAREN = 64;
	public static readonly U_R_PAREN = 65;
	public static readonly U_L_BRACE = 66;
	public static readonly U_R_BRACE = 67;
	public static readonly U_ONE = 68;
	public static readonly U_NUMBER = 69;
	public static readonly U_CMD_LEFT = 70;
	public static readonly U_CMD_RIGHT = 71;
	public static readonly U_WS = 72;
	public static readonly U_SLASH_SPACE = 73;
	public static readonly U_ERROR_CHAR = 74;
	public static readonly EOF = Token.EOF;
	public static readonly UNITS = 1;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: string[] = [ null, "'['", "'\\lbrack'", 
                                                   "';'", null, null, null, 
                                                   null, "'|'", "'_'", "'\\pi'", 
                                                   "'\\int'", "'\\mathrm'", 
                                                   null, null, null, "'\\sim'", 
                                                   "'\\approx'", "'\\'", 
                                                   "'sin'", "'cos'", "'tan'", 
                                                   "'cot'", "'sec'", "'csc'", 
                                                   "'arcsin'", "'arccos'", 
                                                   "'arctan'", "'sinh'", 
                                                   "'cosh'", "'tanh'", "'coth'", 
                                                   "'ln'", "'log'", "'\\log_'", 
                                                   null, null, "'$$'", "'+'", 
                                                   "'-'", null, "'='", "'<'", 
                                                   "'>'", "'\\le'", "'\\ge'", 
                                                   "','", null, null, null, 
                                                   null, null, null, null, 
                                                   null, "'\\:'", null, 
                                                   "']'", "'\\rbrack'", 
                                                   null, null, null, null, 
                                                   null, null, null, null, 
                                                   null, "'1'" ];
	public static readonly symbolicNames: string[] = [ null, "L_BRACKET", "ALT_L_BRACKET", 
                                                    "SEMICOLON", "L_BRACE", 
                                                    "R_BRACE", "L_PAREN", 
                                                    "R_PAREN", "VBAR", "UNDERSCORE", 
                                                    "PI", "CMD_INT", "CMD_MATHRM", 
                                                    "CMD_FRAC", "CMD_CDOT", 
                                                    "CMD_SQRT", "CMD_SIM", 
                                                    "CMD_APPROX", "BACK_SLASH", 
                                                    "CMD_SIN", "CMD_COS", 
                                                    "CMD_TAN", "CMD_COT", 
                                                    "CMD_SEC", "CMD_CSC", 
                                                    "CMD_ARCSIN", "CMD_ARCCOS", 
                                                    "CMD_ARCTAN", "CMD_SINH", 
                                                    "CMD_COSH", "CMD_TANH", 
                                                    "CMD_COTH", "CMD_LN", 
                                                    "CMD_LOG", "CMD_SLASH_LOG_UNDERSCORE", 
                                                    "CMD_LEFT", "CMD_RIGHT", 
                                                    "DOUBLE_DOLLAR_SIGN", 
                                                    "ADD", "SUB", "CARET", 
                                                    "EQ", "LT", "GT", "LTE", 
                                                    "GTE", "COMMA", "SINGLE_CHAR_NUMBER", 
                                                    "NUMBER", "SINGLE_CHAR_ID", 
                                                    "UNDERSCORE_SUBSCRIPT", 
                                                    "CARET_SINGLE_CHAR_ID_UNDERSCORE_SUBSCRIPT", 
                                                    "ID", "WS", "SLASH_SPACE", 
                                                    "SLASH_COLON", "ERROR_CHAR", 
                                                    "R_BRACKET", "ALT_R_BRACKET", 
                                                    "U_CMD_FRAC", "U_CMD_CDOT", 
                                                    "U_CMD_SQRT", "U_CARET", 
                                                    "U_NAME", "U_L_PAREN", 
                                                    "U_R_PAREN", "U_L_BRACE", 
                                                    "U_R_BRACE", "U_ONE", 
                                                    "U_NUMBER", "U_CMD_LEFT", 
                                                    "U_CMD_RIGHT", "U_WS", 
                                                    "U_SLASH_SPACE", "U_ERROR_CHAR" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", "UNITS", ];

	public static readonly ruleNames: string[] = [
		"L_BRACKET", "ALT_L_BRACKET", "SEMICOLON", "L_BRACE", "R_BRACE", "L_PAREN", 
		"R_PAREN", "VBAR", "UNDERSCORE", "PI", "CMD_INT", "CMD_MATHRM", "CMD_FRAC", 
		"CMD_CDOT", "CMD_SQRT", "CMD_SIM", "CMD_APPROX", "BACK_SLASH", "CMD_SIN", 
		"CMD_COS", "CMD_TAN", "CMD_COT", "CMD_SEC", "CMD_CSC", "CMD_ARCSIN", "CMD_ARCCOS", 
		"CMD_ARCTAN", "CMD_SINH", "CMD_COSH", "CMD_TANH", "CMD_COTH", "CMD_LN", 
		"CMD_LOG", "CMD_SLASH_LOG_UNDERSCORE", "CMD_LEFT", "CMD_RIGHT", "DOUBLE_DOLLAR_SIGN", 
		"ADD", "SUB", "CARET", "EQ", "LT", "GT", "LTE", "GTE", "COMMA", "SINGLE_CHAR_NUMBER", 
		"NUMBER", "DIGIT", "IDENTIFIER", "EXP", "GREEK_CHAR", "SINGLE_CHAR_ID", 
		"UNDERSCORE_SUBSCRIPT", "CARET_SINGLE_CHAR_ID_UNDERSCORE_SUBSCRIPT", "ID", 
		"WS", "SLASH_SPACE", "SLASH_COLON", "ERROR_CHAR", "R_BRACKET", "ALT_R_BRACKET", 
		"U_CMD_FRAC", "U_CMD_CDOT", "U_CMD_SQRT", "U_CARET", "U_NAME", "U_L_PAREN", 
		"U_R_PAREN", "U_L_BRACE", "U_R_BRACE", "U_ONE", "U_NUMBER", "U_DIGIT", 
		"U_CMD_LEFT", "U_CMD_RIGHT", "U_WS", "U_SLASH_SPACE", "U_ERROR_CHAR",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, LatexLexer._ATN, LatexLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "LatexLexer.g4"; }

	public get literalNames(): (string | null)[] { return LatexLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return LatexLexer.symbolicNames; }
	public get ruleNames(): string[] { return LatexLexer.ruleNames; }

	public get serializedATN(): number[] { return LatexLexer._serializedATN; }

	public get channelNames(): string[] { return LatexLexer.channelNames; }

	public get modeNames(): string[] { return LatexLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,74,721,6,-1,6,-1,
	2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,
	2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,
	7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,
	23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,
	2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
	38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
	7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,
	52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,
	2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,
	67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,
	7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,1,0,1,0,1,0,1,0,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,
	7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,
	11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,
	1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,
	16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,18,1,19,1,19,
	1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,
	23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,
	1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,
	27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,
	1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,
	34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
	1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,
	40,1,41,1,41,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,
	1,46,1,46,1,47,4,47,364,8,47,11,47,12,47,365,1,47,1,47,5,47,370,8,47,10,
	47,12,47,373,9,47,1,47,3,47,376,8,47,1,47,1,47,4,47,380,8,47,11,47,12,47,
	381,1,47,3,47,385,8,47,1,47,4,47,388,8,47,11,47,12,47,389,1,47,3,47,393,
	8,47,3,47,395,8,47,1,48,1,48,1,49,1,49,5,49,401,8,49,10,49,12,49,404,9,
	49,1,50,1,50,3,50,408,8,50,1,50,4,50,411,8,50,11,50,12,50,412,1,51,1,51,
	1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,
	51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
	1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,
	51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
	1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,
	51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
	1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,
	51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
	1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,
	51,1,51,1,51,1,51,1,51,1,51,3,51,553,8,51,1,52,1,52,1,53,1,53,1,53,1,53,
	1,53,4,53,562,8,53,11,53,12,53,563,3,53,566,8,53,1,53,1,53,1,53,1,53,3,
	53,572,8,53,1,54,1,54,1,54,1,54,1,55,1,55,3,55,580,8,55,1,55,3,55,583,8,
	55,1,56,4,56,586,8,56,11,56,12,56,587,1,56,1,56,1,57,1,57,1,57,1,57,1,57,
	1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,
	61,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,
	1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,66,1,66,5,
	66,640,8,66,10,66,12,66,643,9,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,
	1,71,1,71,1,72,3,72,656,8,72,1,72,4,72,659,8,72,11,72,12,72,660,1,72,1,
	72,5,72,665,8,72,10,72,12,72,668,9,72,1,72,3,72,671,8,72,1,72,1,72,4,72,
	675,8,72,11,72,12,72,676,1,72,3,72,680,8,72,1,72,4,72,683,8,72,11,72,12,
	72,684,3,72,687,8,72,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,
	1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,76,4,76,709,8,76,11,76,12,
	76,710,1,76,1,76,1,77,1,77,1,77,1,77,1,77,1,78,1,78,0,0,79,2,1,4,2,6,3,
	8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,12,26,13,28,14,30,15,32,16,
	34,17,36,18,38,19,40,20,42,21,44,22,46,23,48,24,50,25,52,26,54,27,56,28,
	58,29,60,30,62,31,64,32,66,33,68,34,70,35,72,36,74,37,76,38,78,39,80,40,
	82,41,84,42,86,43,88,44,90,45,92,46,94,47,96,48,98,0,100,0,102,0,104,0,
	106,49,108,50,110,51,112,52,114,53,116,54,118,55,120,56,122,57,124,58,126,
	59,128,60,130,61,132,62,134,63,136,64,138,65,140,66,142,67,144,68,146,69,
	148,0,150,70,152,71,154,72,156,73,158,74,2,0,1,6,1,0,48,57,2,0,65,90,97,
	122,3,0,48,57,65,90,97,122,2,0,69,69,101,101,2,0,43,43,45,45,3,0,9,10,13,
	13,32,32,774,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,
	0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,
	1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,
	0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,
	1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,
	0,0,56,1,0,0,0,0,58,1,0,0,0,0,60,1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,
	1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,0,0,72,1,0,0,0,0,74,1,0,0,0,0,76,1,0,0,
	0,0,78,1,0,0,0,0,80,1,0,0,0,0,82,1,0,0,0,0,84,1,0,0,0,0,86,1,0,0,0,0,88,
	1,0,0,0,0,90,1,0,0,0,0,92,1,0,0,0,0,94,1,0,0,0,0,96,1,0,0,0,0,106,1,0,0,
	0,0,108,1,0,0,0,0,110,1,0,0,0,0,112,1,0,0,0,0,114,1,0,0,0,0,116,1,0,0,0,
	0,118,1,0,0,0,0,120,1,0,0,0,1,122,1,0,0,0,1,124,1,0,0,0,1,126,1,0,0,0,1,
	128,1,0,0,0,1,130,1,0,0,0,1,132,1,0,0,0,1,134,1,0,0,0,1,136,1,0,0,0,1,138,
	1,0,0,0,1,140,1,0,0,0,1,142,1,0,0,0,1,144,1,0,0,0,1,146,1,0,0,0,1,150,1,
	0,0,0,1,152,1,0,0,0,1,154,1,0,0,0,1,156,1,0,0,0,1,158,1,0,0,0,2,160,1,0,
	0,0,4,164,1,0,0,0,6,174,1,0,0,0,8,176,1,0,0,0,10,178,1,0,0,0,12,180,1,0,
	0,0,14,182,1,0,0,0,16,184,1,0,0,0,18,186,1,0,0,0,20,188,1,0,0,0,22,192,
	1,0,0,0,24,197,1,0,0,0,26,205,1,0,0,0,28,211,1,0,0,0,30,217,1,0,0,0,32,
	223,1,0,0,0,34,228,1,0,0,0,36,236,1,0,0,0,38,238,1,0,0,0,40,242,1,0,0,0,
	42,246,1,0,0,0,44,250,1,0,0,0,46,254,1,0,0,0,48,258,1,0,0,0,50,262,1,0,
	0,0,52,269,1,0,0,0,54,276,1,0,0,0,56,283,1,0,0,0,58,288,1,0,0,0,60,293,
	1,0,0,0,62,298,1,0,0,0,64,303,1,0,0,0,66,306,1,0,0,0,68,310,1,0,0,0,70,
	316,1,0,0,0,72,324,1,0,0,0,74,333,1,0,0,0,76,338,1,0,0,0,78,340,1,0,0,0,
	80,342,1,0,0,0,82,344,1,0,0,0,84,346,1,0,0,0,86,348,1,0,0,0,88,350,1,0,
	0,0,90,354,1,0,0,0,92,358,1,0,0,0,94,360,1,0,0,0,96,394,1,0,0,0,98,396,
	1,0,0,0,100,398,1,0,0,0,102,405,1,0,0,0,104,414,1,0,0,0,106,554,1,0,0,0,
	108,571,1,0,0,0,110,573,1,0,0,0,112,579,1,0,0,0,114,585,1,0,0,0,116,591,
	1,0,0,0,118,596,1,0,0,0,120,601,1,0,0,0,122,603,1,0,0,0,124,607,1,0,0,0,
	126,617,1,0,0,0,128,623,1,0,0,0,130,629,1,0,0,0,132,635,1,0,0,0,134,637,
	1,0,0,0,136,644,1,0,0,0,138,646,1,0,0,0,140,648,1,0,0,0,142,650,1,0,0,0,
	144,652,1,0,0,0,146,686,1,0,0,0,148,688,1,0,0,0,150,690,1,0,0,0,152,698,
	1,0,0,0,154,708,1,0,0,0,156,714,1,0,0,0,158,719,1,0,0,0,160,161,5,91,0,
	0,161,162,1,0,0,0,162,163,6,0,0,0,163,3,1,0,0,0,164,165,5,92,0,0,165,166,
	5,108,0,0,166,167,5,98,0,0,167,168,5,114,0,0,168,169,5,97,0,0,169,170,5,
	99,0,0,170,171,5,107,0,0,171,172,1,0,0,0,172,173,6,1,0,0,173,5,1,0,0,0,
	174,175,5,59,0,0,175,7,1,0,0,0,176,177,5,123,0,0,177,9,1,0,0,0,178,179,
	5,125,0,0,179,11,1,0,0,0,180,181,5,40,0,0,181,13,1,0,0,0,182,183,5,41,0,
	0,183,15,1,0,0,0,184,185,5,124,0,0,185,17,1,0,0,0,186,187,5,95,0,0,187,
	19,1,0,0,0,188,189,5,92,0,0,189,190,5,112,0,0,190,191,5,105,0,0,191,21,
	1,0,0,0,192,193,5,92,0,0,193,194,5,105,0,0,194,195,5,110,0,0,195,196,5,
	116,0,0,196,23,1,0,0,0,197,198,5,92,0,0,198,199,5,109,0,0,199,200,5,97,
	0,0,200,201,5,116,0,0,201,202,5,104,0,0,202,203,5,114,0,0,203,204,5,109,
	0,0,204,25,1,0,0,0,205,206,5,92,0,0,206,207,5,102,0,0,207,208,5,114,0,0,
	208,209,5,97,0,0,209,210,5,99,0,0,210,27,1,0,0,0,211,212,5,92,0,0,212,213,
	5,99,0,0,213,214,5,100,0,0,214,215,5,111,0,0,215,216,5,116,0,0,216,29,1,
	0,0,0,217,218,5,92,0,0,218,219,5,115,0,0,219,220,5,113,0,0,220,221,5,114,
	0,0,221,222,5,116,0,0,222,31,1,0,0,0,223,224,5,92,0,0,224,225,5,115,0,0,
	225,226,5,105,0,0,226,227,5,109,0,0,227,33,1,0,0,0,228,229,5,92,0,0,229,
	230,5,97,0,0,230,231,5,112,0,0,231,232,5,112,0,0,232,233,5,114,0,0,233,
	234,5,111,0,0,234,235,5,120,0,0,235,35,1,0,0,0,236,237,5,92,0,0,237,37,
	1,0,0,0,238,239,5,115,0,0,239,240,5,105,0,0,240,241,5,110,0,0,241,39,1,
	0,0,0,242,243,5,99,0,0,243,244,5,111,0,0,244,245,5,115,0,0,245,41,1,0,0,
	0,246,247,5,116,0,0,247,248,5,97,0,0,248,249,5,110,0,0,249,43,1,0,0,0,250,
	251,5,99,0,0,251,252,5,111,0,0,252,253,5,116,0,0,253,45,1,0,0,0,254,255,
	5,115,0,0,255,256,5,101,0,0,256,257,5,99,0,0,257,47,1,0,0,0,258,259,5,99,
	0,0,259,260,5,115,0,0,260,261,5,99,0,0,261,49,1,0,0,0,262,263,5,97,0,0,
	263,264,5,114,0,0,264,265,5,99,0,0,265,266,5,115,0,0,266,267,5,105,0,0,
	267,268,5,110,0,0,268,51,1,0,0,0,269,270,5,97,0,0,270,271,5,114,0,0,271,
	272,5,99,0,0,272,273,5,99,0,0,273,274,5,111,0,0,274,275,5,115,0,0,275,53,
	1,0,0,0,276,277,5,97,0,0,277,278,5,114,0,0,278,279,5,99,0,0,279,280,5,116,
	0,0,280,281,5,97,0,0,281,282,5,110,0,0,282,55,1,0,0,0,283,284,5,115,0,0,
	284,285,5,105,0,0,285,286,5,110,0,0,286,287,5,104,0,0,287,57,1,0,0,0,288,
	289,5,99,0,0,289,290,5,111,0,0,290,291,5,115,0,0,291,292,5,104,0,0,292,
	59,1,0,0,0,293,294,5,116,0,0,294,295,5,97,0,0,295,296,5,110,0,0,296,297,
	5,104,0,0,297,61,1,0,0,0,298,299,5,99,0,0,299,300,5,111,0,0,300,301,5,116,
	0,0,301,302,5,104,0,0,302,63,1,0,0,0,303,304,5,108,0,0,304,305,5,110,0,
	0,305,65,1,0,0,0,306,307,5,108,0,0,307,308,5,111,0,0,308,309,5,103,0,0,
	309,67,1,0,0,0,310,311,5,92,0,0,311,312,5,108,0,0,312,313,5,111,0,0,313,
	314,5,103,0,0,314,315,5,95,0,0,315,69,1,0,0,0,316,317,5,92,0,0,317,318,
	5,108,0,0,318,319,5,101,0,0,319,320,5,102,0,0,320,321,5,116,0,0,321,322,
	1,0,0,0,322,323,6,34,1,0,323,71,1,0,0,0,324,325,5,92,0,0,325,326,5,114,
	0,0,326,327,5,105,0,0,327,328,5,103,0,0,328,329,5,104,0,0,329,330,5,116,
	0,0,330,331,1,0,0,0,331,332,6,35,1,0,332,73,1,0,0,0,333,334,5,36,0,0,334,
	335,5,36,0,0,335,336,1,0,0,0,336,337,6,36,1,0,337,75,1,0,0,0,338,339,5,
	43,0,0,339,77,1,0,0,0,340,341,5,45,0,0,341,79,1,0,0,0,342,343,5,94,0,0,
	343,81,1,0,0,0,344,345,5,61,0,0,345,83,1,0,0,0,346,347,5,60,0,0,347,85,
	1,0,0,0,348,349,5,62,0,0,349,87,1,0,0,0,350,351,5,92,0,0,351,352,5,108,
	0,0,352,353,5,101,0,0,353,89,1,0,0,0,354,355,5,92,0,0,355,356,5,103,0,0,
	356,357,5,101,0,0,357,91,1,0,0,0,358,359,5,44,0,0,359,93,1,0,0,0,360,361,
	7,0,0,0,361,95,1,0,0,0,362,364,3,98,48,0,363,362,1,0,0,0,364,365,1,0,0,
	0,365,363,1,0,0,0,365,366,1,0,0,0,366,367,1,0,0,0,367,371,5,46,0,0,368,
	370,3,98,48,0,369,368,1,0,0,0,370,373,1,0,0,0,371,369,1,0,0,0,371,372,1,
	0,0,0,372,375,1,0,0,0,373,371,1,0,0,0,374,376,3,102,50,0,375,374,1,0,0,
	0,375,376,1,0,0,0,376,395,1,0,0,0,377,379,5,46,0,0,378,380,3,98,48,0,379,
	378,1,0,0,0,380,381,1,0,0,0,381,379,1,0,0,0,381,382,1,0,0,0,382,384,1,0,
	0,0,383,385,3,102,50,0,384,383,1,0,0,0,384,385,1,0,0,0,385,395,1,0,0,0,
	386,388,3,98,48,0,387,386,1,0,0,0,388,389,1,0,0,0,389,387,1,0,0,0,389,390,
	1,0,0,0,390,392,1,0,0,0,391,393,3,102,50,0,392,391,1,0,0,0,392,393,1,0,
	0,0,393,395,1,0,0,0,394,363,1,0,0,0,394,377,1,0,0,0,394,387,1,0,0,0,395,
	97,1,0,0,0,396,397,7,0,0,0,397,99,1,0,0,0,398,402,7,1,0,0,399,401,7,2,0,
	0,400,399,1,0,0,0,401,404,1,0,0,0,402,400,1,0,0,0,402,403,1,0,0,0,403,101,
	1,0,0,0,404,402,1,0,0,0,405,407,7,3,0,0,406,408,7,4,0,0,407,406,1,0,0,0,
	407,408,1,0,0,0,408,410,1,0,0,0,409,411,3,98,48,0,410,409,1,0,0,0,411,412,
	1,0,0,0,412,410,1,0,0,0,412,413,1,0,0,0,413,103,1,0,0,0,414,552,5,92,0,
	0,415,416,5,97,0,0,416,417,5,108,0,0,417,418,5,112,0,0,418,419,5,104,0,
	0,419,553,5,97,0,0,420,421,5,98,0,0,421,422,5,101,0,0,422,423,5,116,0,0,
	423,553,5,97,0,0,424,425,5,103,0,0,425,426,5,97,0,0,426,427,5,109,0,0,427,
	428,5,109,0,0,428,553,5,97,0,0,429,430,5,100,0,0,430,431,5,101,0,0,431,
	432,5,108,0,0,432,433,5,116,0,0,433,553,5,97,0,0,434,435,5,101,0,0,435,
	436,5,112,0,0,436,437,5,115,0,0,437,438,5,105,0,0,438,439,5,108,0,0,439,
	440,5,111,0,0,440,553,5,110,0,0,441,442,5,122,0,0,442,443,5,101,0,0,443,
	444,5,116,0,0,444,553,5,97,0,0,445,446,5,101,0,0,446,447,5,116,0,0,447,
	553,5,97,0,0,448,449,5,116,0,0,449,450,5,104,0,0,450,451,5,101,0,0,451,
	452,5,116,0,0,452,553,5,97,0,0,453,454,5,105,0,0,454,455,5,111,0,0,455,
	456,5,116,0,0,456,553,5,97,0,0,457,458,5,107,0,0,458,459,5,97,0,0,459,460,
	5,112,0,0,460,461,5,112,0,0,461,553,5,97,0,0,462,463,5,108,0,0,463,464,
	5,97,0,0,464,465,5,109,0,0,465,466,5,98,0,0,466,467,5,100,0,0,467,553,5,
	97,0,0,468,469,5,109,0,0,469,553,5,117,0,0,470,471,5,120,0,0,471,553,5,
	105,0,0,472,473,5,114,0,0,473,474,5,104,0,0,474,553,5,111,0,0,475,476,5,
	115,0,0,476,477,5,105,0,0,477,478,5,103,0,0,478,479,5,109,0,0,479,553,5,
	97,0,0,480,481,5,116,0,0,481,482,5,97,0,0,482,553,5,117,0,0,483,484,5,117,
	0,0,484,485,5,112,0,0,485,486,5,115,0,0,486,487,5,105,0,0,487,488,5,108,
	0,0,488,489,5,111,0,0,489,553,5,110,0,0,490,491,5,112,0,0,491,492,5,104,
	0,0,492,553,5,105,0,0,493,494,5,99,0,0,494,495,5,104,0,0,495,553,5,105,
	0,0,496,497,5,112,0,0,497,498,5,115,0,0,498,553,5,105,0,0,499,500,5,111,
	0,0,500,501,5,109,0,0,501,502,5,101,0,0,502,503,5,103,0,0,503,553,5,97,
	0,0,504,505,5,71,0,0,505,506,5,97,0,0,506,507,5,109,0,0,507,508,5,109,0,
	0,508,553,5,97,0,0,509,510,5,68,0,0,510,511,5,101,0,0,511,512,5,108,0,0,
	512,513,5,116,0,0,513,553,5,97,0,0,514,515,5,84,0,0,515,516,5,104,0,0,516,
	517,5,101,0,0,517,518,5,116,0,0,518,553,5,97,0,0,519,520,5,76,0,0,520,521,
	5,97,0,0,521,522,5,109,0,0,522,523,5,98,0,0,523,524,5,100,0,0,524,553,5,
	97,0,0,525,526,5,88,0,0,526,553,5,105,0,0,527,528,5,80,0,0,528,553,5,105,
	0,0,529,530,5,83,0,0,530,531,5,105,0,0,531,532,5,103,0,0,532,533,5,109,
	0,0,533,553,5,97,0,0,534,535,5,85,0,0,535,536,5,112,0,0,536,537,5,115,0,
	0,537,538,5,105,0,0,538,539,5,108,0,0,539,540,5,111,0,0,540,553,5,110,0,
	0,541,542,5,80,0,0,542,543,5,104,0,0,543,553,5,105,0,0,544,545,5,80,0,0,
	545,546,5,115,0,0,546,553,5,105,0,0,547,548,5,79,0,0,548,549,5,109,0,0,
	549,550,5,101,0,0,550,551,5,103,0,0,551,553,5,97,0,0,552,415,1,0,0,0,552,
	420,1,0,0,0,552,424,1,0,0,0,552,429,1,0,0,0,552,434,1,0,0,0,552,441,1,0,
	0,0,552,445,1,0,0,0,552,448,1,0,0,0,552,453,1,0,0,0,552,457,1,0,0,0,552,
	462,1,0,0,0,552,468,1,0,0,0,552,470,1,0,0,0,552,472,1,0,0,0,552,475,1,0,
	0,0,552,480,1,0,0,0,552,483,1,0,0,0,552,490,1,0,0,0,552,493,1,0,0,0,552,
	496,1,0,0,0,552,499,1,0,0,0,552,504,1,0,0,0,552,509,1,0,0,0,552,514,1,0,
	0,0,552,519,1,0,0,0,552,525,1,0,0,0,552,527,1,0,0,0,552,529,1,0,0,0,552,
	534,1,0,0,0,552,541,1,0,0,0,552,544,1,0,0,0,552,547,1,0,0,0,553,105,1,0,
	0,0,554,555,7,1,0,0,555,107,1,0,0,0,556,557,5,95,0,0,557,558,5,123,0,0,
	558,565,1,0,0,0,559,566,3,100,49,0,560,562,3,98,48,0,561,560,1,0,0,0,562,
	563,1,0,0,0,563,561,1,0,0,0,563,564,1,0,0,0,564,566,1,0,0,0,565,559,1,0,
	0,0,565,561,1,0,0,0,566,567,1,0,0,0,567,568,5,125,0,0,568,572,1,0,0,0,569,
	570,5,95,0,0,570,572,7,2,0,0,571,556,1,0,0,0,571,569,1,0,0,0,572,109,1,
	0,0,0,573,574,5,94,0,0,574,575,7,1,0,0,575,576,3,108,53,0,576,111,1,0,0,
	0,577,580,3,100,49,0,578,580,3,104,51,0,579,577,1,0,0,0,579,578,1,0,0,0,
	580,582,1,0,0,0,581,583,3,108,53,0,582,581,1,0,0,0,582,583,1,0,0,0,583,
	113,1,0,0,0,584,586,7,5,0,0,585,584,1,0,0,0,586,587,1,0,0,0,587,585,1,0,
	0,0,587,588,1,0,0,0,588,589,1,0,0,0,589,590,6,56,1,0,590,115,1,0,0,0,591,
	592,5,92,0,0,592,593,5,32,0,0,593,594,1,0,0,0,594,595,6,57,1,0,595,117,
	1,0,0,0,596,597,5,92,0,0,597,598,5,58,0,0,598,599,1,0,0,0,599,600,6,58,
	1,0,600,119,1,0,0,0,601,602,9,0,0,0,602,121,1,0,0,0,603,604,5,93,0,0,604,
	605,1,0,0,0,605,606,6,60,2,0,606,123,1,0,0,0,607,608,5,92,0,0,608,609,5,
	114,0,0,609,610,5,98,0,0,610,611,5,114,0,0,611,612,5,97,0,0,612,613,5,99,
	0,0,613,614,5,107,0,0,614,615,1,0,0,0,615,616,6,61,2,0,616,125,1,0,0,0,
	617,618,5,92,0,0,618,619,5,102,0,0,619,620,5,114,0,0,620,621,5,97,0,0,621,
	622,5,99,0,0,622,127,1,0,0,0,623,624,5,92,0,0,624,625,5,99,0,0,625,626,
	5,100,0,0,626,627,5,111,0,0,627,628,5,116,0,0,628,129,1,0,0,0,629,630,5,
	92,0,0,630,631,5,115,0,0,631,632,5,113,0,0,632,633,5,114,0,0,633,634,5,
	116,0,0,634,131,1,0,0,0,635,636,5,94,0,0,636,133,1,0,0,0,637,641,7,1,0,
	0,638,640,7,2,0,0,639,638,1,0,0,0,640,643,1,0,0,0,641,639,1,0,0,0,641,642,
	1,0,0,0,642,135,1,0,0,0,643,641,1,0,0,0,644,645,5,40,0,0,645,137,1,0,0,
	0,646,647,5,41,0,0,647,139,1,0,0,0,648,649,5,123,0,0,649,141,1,0,0,0,650,
	651,5,125,0,0,651,143,1,0,0,0,652,653,5,49,0,0,653,145,1,0,0,0,654,656,
	5,45,0,0,655,654,1,0,0,0,655,656,1,0,0,0,656,658,1,0,0,0,657,659,3,148,
	73,0,658,657,1,0,0,0,659,660,1,0,0,0,660,658,1,0,0,0,660,661,1,0,0,0,661,
	662,1,0,0,0,662,666,5,46,0,0,663,665,3,148,73,0,664,663,1,0,0,0,665,668,
	1,0,0,0,666,664,1,0,0,0,666,667,1,0,0,0,667,687,1,0,0,0,668,666,1,0,0,0,
	669,671,5,45,0,0,670,669,1,0,0,0,670,671,1,0,0,0,671,672,1,0,0,0,672,674,
	5,46,0,0,673,675,3,148,73,0,674,673,1,0,0,0,675,676,1,0,0,0,676,674,1,0,
	0,0,676,677,1,0,0,0,677,687,1,0,0,0,678,680,5,45,0,0,679,678,1,0,0,0,679,
	680,1,0,0,0,680,682,1,0,0,0,681,683,3,148,73,0,682,681,1,0,0,0,683,684,
	1,0,0,0,684,682,1,0,0,0,684,685,1,0,0,0,685,687,1,0,0,0,686,655,1,0,0,0,
	686,670,1,0,0,0,686,679,1,0,0,0,687,147,1,0,0,0,688,689,7,0,0,0,689,149,
	1,0,0,0,690,691,5,92,0,0,691,692,5,108,0,0,692,693,5,101,0,0,693,694,5,
	102,0,0,694,695,5,116,0,0,695,696,1,0,0,0,696,697,6,74,1,0,697,151,1,0,
	0,0,698,699,5,92,0,0,699,700,5,114,0,0,700,701,5,105,0,0,701,702,5,103,
	0,0,702,703,5,104,0,0,703,704,5,116,0,0,704,705,1,0,0,0,705,706,6,75,1,
	0,706,153,1,0,0,0,707,709,7,5,0,0,708,707,1,0,0,0,709,710,1,0,0,0,710,708,
	1,0,0,0,710,711,1,0,0,0,711,712,1,0,0,0,712,713,6,76,1,0,713,155,1,0,0,
	0,714,715,5,92,0,0,715,716,5,32,0,0,716,717,1,0,0,0,717,718,6,77,1,0,718,
	157,1,0,0,0,719,720,9,0,0,0,720,159,1,0,0,0,30,0,1,365,371,375,381,384,
	389,392,394,402,407,412,552,563,565,571,579,582,587,641,655,660,666,670,
	676,679,684,686,710,3,2,1,0,6,0,0,2,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LatexLexer.__ATN) {
			LatexLexer.__ATN = new ATNDeserializer().deserialize(LatexLexer._serializedATN);
		}

		return LatexLexer.__ATN;
	}


	static DecisionsToDFA = LatexLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}