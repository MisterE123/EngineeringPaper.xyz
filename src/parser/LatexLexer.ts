// Generated from LatexLexer.g4 by ANTLR 4.12.0
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class LatexLexer extends Lexer {
	public static readonly L_BRACKET = 1;
	public static readonly ALT_L_BRACKET = 2;
	public static readonly SEMICOLON = 3;
	public static readonly L_BRACE = 4;
	public static readonly R_BRACE = 5;
	public static readonly L_PAREN = 6;
	public static readonly R_PAREN = 7;
	public static readonly VBAR = 8;
	public static readonly UNDERSCORE = 9;
	public static readonly PI = 10;
	public static readonly CMD_INT = 11;
	public static readonly CMD_MATHRM = 12;
	public static readonly CMD_FRAC = 13;
	public static readonly CMD_CDOT = 14;
	public static readonly CMD_SQRT = 15;
	public static readonly CMD_SIM = 16;
	public static readonly CMD_APPROX = 17;
	public static readonly BACK_SLASH = 18;
	public static readonly CMD_SIN = 19;
	public static readonly CMD_COS = 20;
	public static readonly CMD_TAN = 21;
	public static readonly CMD_COT = 22;
	public static readonly CMD_SEC = 23;
	public static readonly CMD_CSC = 24;
	public static readonly CMD_ARCSIN = 25;
	public static readonly CMD_ARCCOS = 26;
	public static readonly CMD_ARCTAN = 27;
	public static readonly CMD_SINH = 28;
	public static readonly CMD_COSH = 29;
	public static readonly CMD_TANH = 30;
	public static readonly CMD_COTH = 31;
	public static readonly CMD_LN = 32;
	public static readonly CMD_LOG = 33;
	public static readonly CMD_LOG_WITH_SLASH = 34;
	public static readonly CMD_LEFT = 35;
	public static readonly CMD_RIGHT = 36;
	public static readonly ADD = 37;
	public static readonly SUB = 38;
	public static readonly CARET = 39;
	public static readonly EQ = 40;
	public static readonly LT = 41;
	public static readonly GT = 42;
	public static readonly LTE = 43;
	public static readonly GTE = 44;
	public static readonly COMMA = 45;
	public static readonly NUMBER = 46;
	public static readonly ID = 47;
	public static readonly WS = 48;
	public static readonly SLASH_SPACE = 49;
	public static readonly ERROR_CHAR = 50;
	public static readonly R_BRACKET = 51;
	public static readonly ALT_R_BRACKET = 52;
	public static readonly U_CMD_FRAC = 53;
	public static readonly U_CMD_CDOT = 54;
	public static readonly U_CMD_SQRT = 55;
	public static readonly U_CARET = 56;
	public static readonly U_NAME = 57;
	public static readonly U_L_PAREN = 58;
	public static readonly U_R_PAREN = 59;
	public static readonly U_L_BRACE = 60;
	public static readonly U_R_BRACE = 61;
	public static readonly U_ONE = 62;
	public static readonly U_NUMBER = 63;
	public static readonly U_CMD_LEFT = 64;
	public static readonly U_CMD_RIGHT = 65;
	public static readonly U_WS = 66;
	public static readonly U_SLASH_SPACE = 67;
	public static readonly U_ERROR_CHAR = 68;
	public static readonly EOF = Token.EOF;
	public static readonly UNITS = 1;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: string[] = [ null, "'['", "'\\lbrack'", 
                                                   "';'", null, null, null, 
                                                   null, "'|'", "'_'", "'\\pi'", 
                                                   "'\\int'", "'\\mathrm'", 
                                                   null, null, null, "'\\sim'", 
                                                   "'\\approx'", "'\\'", 
                                                   "'sin'", "'cos'", "'tan'", 
                                                   "'cot'", "'sec'", "'csc'", 
                                                   "'arcsin'", "'arccos'", 
                                                   "'arctan'", "'sinh'", 
                                                   "'cosh'", "'tanh'", "'coth'", 
                                                   "'ln'", "'log'", "'\\log'", 
                                                   null, null, "'+'", "'-'", 
                                                   null, "'='", "'<'", "'>'", 
                                                   "'\\le'", "'\\ge'", "','", 
                                                   null, null, null, null, 
                                                   null, "']'", "'\\rbrack'", 
                                                   null, null, null, null, 
                                                   null, null, null, null, 
                                                   null, "'1'" ];
	public static readonly symbolicNames: string[] = [ null, "L_BRACKET", "ALT_L_BRACKET", 
                                                    "SEMICOLON", "L_BRACE", 
                                                    "R_BRACE", "L_PAREN", 
                                                    "R_PAREN", "VBAR", "UNDERSCORE", 
                                                    "PI", "CMD_INT", "CMD_MATHRM", 
                                                    "CMD_FRAC", "CMD_CDOT", 
                                                    "CMD_SQRT", "CMD_SIM", 
                                                    "CMD_APPROX", "BACK_SLASH", 
                                                    "CMD_SIN", "CMD_COS", 
                                                    "CMD_TAN", "CMD_COT", 
                                                    "CMD_SEC", "CMD_CSC", 
                                                    "CMD_ARCSIN", "CMD_ARCCOS", 
                                                    "CMD_ARCTAN", "CMD_SINH", 
                                                    "CMD_COSH", "CMD_TANH", 
                                                    "CMD_COTH", "CMD_LN", 
                                                    "CMD_LOG", "CMD_LOG_WITH_SLASH", 
                                                    "CMD_LEFT", "CMD_RIGHT", 
                                                    "ADD", "SUB", "CARET", 
                                                    "EQ", "LT", "GT", "LTE", 
                                                    "GTE", "COMMA", "NUMBER", 
                                                    "ID", "WS", "SLASH_SPACE", 
                                                    "ERROR_CHAR", "R_BRACKET", 
                                                    "ALT_R_BRACKET", "U_CMD_FRAC", 
                                                    "U_CMD_CDOT", "U_CMD_SQRT", 
                                                    "U_CARET", "U_NAME", 
                                                    "U_L_PAREN", "U_R_PAREN", 
                                                    "U_L_BRACE", "U_R_BRACE", 
                                                    "U_ONE", "U_NUMBER", 
                                                    "U_CMD_LEFT", "U_CMD_RIGHT", 
                                                    "U_WS", "U_SLASH_SPACE", 
                                                    "U_ERROR_CHAR" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", "UNITS", ];

	public static readonly ruleNames: string[] = [
		"L_BRACKET", "ALT_L_BRACKET", "SEMICOLON", "L_BRACE", "R_BRACE", "L_PAREN", 
		"R_PAREN", "VBAR", "UNDERSCORE", "PI", "CMD_INT", "CMD_MATHRM", "CMD_FRAC", 
		"CMD_CDOT", "CMD_SQRT", "CMD_SIM", "CMD_APPROX", "BACK_SLASH", "CMD_SIN", 
		"CMD_COS", "CMD_TAN", "CMD_COT", "CMD_SEC", "CMD_CSC", "CMD_ARCSIN", "CMD_ARCCOS", 
		"CMD_ARCTAN", "CMD_SINH", "CMD_COSH", "CMD_TANH", "CMD_COTH", "CMD_LN", 
		"CMD_LOG", "CMD_LOG_WITH_SLASH", "CMD_LEFT", "CMD_RIGHT", "ADD", "SUB", 
		"CARET", "EQ", "LT", "GT", "LTE", "GTE", "COMMA", "NUMBER", "DIGIT", "IDENTIFIER", 
		"EXP", "GREEK_CHAR", "ID", "WS", "SLASH_SPACE", "ERROR_CHAR", "R_BRACKET", 
		"ALT_R_BRACKET", "U_CMD_FRAC", "U_CMD_CDOT", "U_CMD_SQRT", "U_CARET", 
		"U_NAME", "U_L_PAREN", "U_R_PAREN", "U_L_BRACE", "U_R_BRACE", "U_ONE", 
		"U_NUMBER", "U_DIGIT", "U_CMD_LEFT", "U_CMD_RIGHT", "U_WS", "U_SLASH_SPACE", 
		"U_ERROR_CHAR",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, LatexLexer._ATN, LatexLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "LatexLexer.g4"; }

	public get literalNames(): (string | null)[] { return LatexLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return LatexLexer.symbolicNames; }
	public get ruleNames(): string[] { return LatexLexer.ruleNames; }

	public get serializedATN(): number[] { return LatexLexer._serializedATN; }

	public get channelNames(): string[] { return LatexLexer.channelNames; }

	public get modeNames(): string[] { return LatexLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,68,685,6,-1,6,-1,
	2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,
	2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,
	7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,
	23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,
	2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
	38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
	7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,
	52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,
	2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,
	67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,1,0,1,0,1,0,1,
	0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,
	5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,
	13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
	1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,
	18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,
	1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,
	25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
	1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,
	30,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,
	1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,
	35,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,
	1,41,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,45,4,45,344,8,
	45,11,45,12,45,345,1,45,1,45,5,45,350,8,45,10,45,12,45,353,9,45,1,45,3,
	45,356,8,45,1,45,1,45,4,45,360,8,45,11,45,12,45,361,1,45,3,45,365,8,45,
	1,45,4,45,368,8,45,11,45,12,45,369,1,45,3,45,373,8,45,3,45,375,8,45,1,46,
	1,46,1,47,1,47,5,47,381,8,47,10,47,12,47,384,9,47,1,48,1,48,3,48,388,8,
	48,1,48,4,48,391,8,48,11,48,12,48,392,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
	1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,
	49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
	1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,
	49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
	1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,
	49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
	1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,
	49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
	1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,
	49,3,49,533,8,49,1,50,1,50,3,50,537,8,50,1,50,1,50,1,50,1,50,1,50,4,50,
	544,8,50,11,50,12,50,545,3,50,548,8,50,1,50,1,50,3,50,552,8,50,1,51,4,51,
	555,8,51,11,51,12,51,556,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,
	54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,
	1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,
	58,1,58,1,58,1,59,1,59,1,60,1,60,5,60,604,8,60,10,60,12,60,607,9,60,1,61,
	1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,3,66,620,8,66,1,66,4,
	66,623,8,66,11,66,12,66,624,1,66,1,66,5,66,629,8,66,10,66,12,66,632,9,66,
	1,66,3,66,635,8,66,1,66,1,66,4,66,639,8,66,11,66,12,66,640,1,66,3,66,644,
	8,66,1,66,4,66,647,8,66,11,66,12,66,648,3,66,651,8,66,1,67,1,67,1,68,1,
	68,1,68,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,
	1,69,1,70,4,70,673,8,70,11,70,12,70,674,1,70,1,70,1,71,1,71,1,71,1,71,1,
	71,1,72,1,72,0,0,73,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,
	24,12,26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,46,23,
	48,24,50,25,52,26,54,27,56,28,58,29,60,30,62,31,64,32,66,33,68,34,70,35,
	72,36,74,37,76,38,78,39,80,40,82,41,84,42,86,43,88,44,90,45,92,46,94,0,
	96,0,98,0,100,0,102,47,104,48,106,49,108,50,110,51,112,52,114,53,116,54,
	118,55,120,56,122,57,124,58,126,59,128,60,130,61,132,62,134,63,136,0,138,
	64,140,65,142,66,144,67,146,68,2,0,1,6,1,0,48,57,2,0,65,90,97,122,3,0,48,
	57,65,90,97,122,2,0,69,69,101,101,2,0,43,43,45,45,3,0,9,10,13,13,32,32,
	737,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,
	0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,
	0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,
	0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,
	0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,
	0,0,0,0,58,1,0,0,0,0,60,1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,
	0,68,1,0,0,0,0,70,1,0,0,0,0,72,1,0,0,0,0,74,1,0,0,0,0,76,1,0,0,0,0,78,1,
	0,0,0,0,80,1,0,0,0,0,82,1,0,0,0,0,84,1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,
	0,90,1,0,0,0,0,92,1,0,0,0,0,102,1,0,0,0,0,104,1,0,0,0,0,106,1,0,0,0,0,108,
	1,0,0,0,1,110,1,0,0,0,1,112,1,0,0,0,1,114,1,0,0,0,1,116,1,0,0,0,1,118,1,
	0,0,0,1,120,1,0,0,0,1,122,1,0,0,0,1,124,1,0,0,0,1,126,1,0,0,0,1,128,1,0,
	0,0,1,130,1,0,0,0,1,132,1,0,0,0,1,134,1,0,0,0,1,138,1,0,0,0,1,140,1,0,0,
	0,1,142,1,0,0,0,1,144,1,0,0,0,1,146,1,0,0,0,2,148,1,0,0,0,4,152,1,0,0,0,
	6,162,1,0,0,0,8,164,1,0,0,0,10,166,1,0,0,0,12,168,1,0,0,0,14,170,1,0,0,
	0,16,172,1,0,0,0,18,174,1,0,0,0,20,176,1,0,0,0,22,180,1,0,0,0,24,185,1,
	0,0,0,26,193,1,0,0,0,28,199,1,0,0,0,30,205,1,0,0,0,32,211,1,0,0,0,34,216,
	1,0,0,0,36,224,1,0,0,0,38,226,1,0,0,0,40,230,1,0,0,0,42,234,1,0,0,0,44,
	238,1,0,0,0,46,242,1,0,0,0,48,246,1,0,0,0,50,250,1,0,0,0,52,257,1,0,0,0,
	54,264,1,0,0,0,56,271,1,0,0,0,58,276,1,0,0,0,60,281,1,0,0,0,62,286,1,0,
	0,0,64,291,1,0,0,0,66,294,1,0,0,0,68,298,1,0,0,0,70,303,1,0,0,0,72,311,
	1,0,0,0,74,320,1,0,0,0,76,322,1,0,0,0,78,324,1,0,0,0,80,326,1,0,0,0,82,
	328,1,0,0,0,84,330,1,0,0,0,86,332,1,0,0,0,88,336,1,0,0,0,90,340,1,0,0,0,
	92,374,1,0,0,0,94,376,1,0,0,0,96,378,1,0,0,0,98,385,1,0,0,0,100,394,1,0,
	0,0,102,536,1,0,0,0,104,554,1,0,0,0,106,560,1,0,0,0,108,565,1,0,0,0,110,
	567,1,0,0,0,112,571,1,0,0,0,114,581,1,0,0,0,116,587,1,0,0,0,118,593,1,0,
	0,0,120,599,1,0,0,0,122,601,1,0,0,0,124,608,1,0,0,0,126,610,1,0,0,0,128,
	612,1,0,0,0,130,614,1,0,0,0,132,616,1,0,0,0,134,650,1,0,0,0,136,652,1,0,
	0,0,138,654,1,0,0,0,140,662,1,0,0,0,142,672,1,0,0,0,144,678,1,0,0,0,146,
	683,1,0,0,0,148,149,5,91,0,0,149,150,1,0,0,0,150,151,6,0,0,0,151,3,1,0,
	0,0,152,153,5,92,0,0,153,154,5,108,0,0,154,155,5,98,0,0,155,156,5,114,0,
	0,156,157,5,97,0,0,157,158,5,99,0,0,158,159,5,107,0,0,159,160,1,0,0,0,160,
	161,6,1,0,0,161,5,1,0,0,0,162,163,5,59,0,0,163,7,1,0,0,0,164,165,5,123,
	0,0,165,9,1,0,0,0,166,167,5,125,0,0,167,11,1,0,0,0,168,169,5,40,0,0,169,
	13,1,0,0,0,170,171,5,41,0,0,171,15,1,0,0,0,172,173,5,124,0,0,173,17,1,0,
	0,0,174,175,5,95,0,0,175,19,1,0,0,0,176,177,5,92,0,0,177,178,5,112,0,0,
	178,179,5,105,0,0,179,21,1,0,0,0,180,181,5,92,0,0,181,182,5,105,0,0,182,
	183,5,110,0,0,183,184,5,116,0,0,184,23,1,0,0,0,185,186,5,92,0,0,186,187,
	5,109,0,0,187,188,5,97,0,0,188,189,5,116,0,0,189,190,5,104,0,0,190,191,
	5,114,0,0,191,192,5,109,0,0,192,25,1,0,0,0,193,194,5,92,0,0,194,195,5,102,
	0,0,195,196,5,114,0,0,196,197,5,97,0,0,197,198,5,99,0,0,198,27,1,0,0,0,
	199,200,5,92,0,0,200,201,5,99,0,0,201,202,5,100,0,0,202,203,5,111,0,0,203,
	204,5,116,0,0,204,29,1,0,0,0,205,206,5,92,0,0,206,207,5,115,0,0,207,208,
	5,113,0,0,208,209,5,114,0,0,209,210,5,116,0,0,210,31,1,0,0,0,211,212,5,
	92,0,0,212,213,5,115,0,0,213,214,5,105,0,0,214,215,5,109,0,0,215,33,1,0,
	0,0,216,217,5,92,0,0,217,218,5,97,0,0,218,219,5,112,0,0,219,220,5,112,0,
	0,220,221,5,114,0,0,221,222,5,111,0,0,222,223,5,120,0,0,223,35,1,0,0,0,
	224,225,5,92,0,0,225,37,1,0,0,0,226,227,5,115,0,0,227,228,5,105,0,0,228,
	229,5,110,0,0,229,39,1,0,0,0,230,231,5,99,0,0,231,232,5,111,0,0,232,233,
	5,115,0,0,233,41,1,0,0,0,234,235,5,116,0,0,235,236,5,97,0,0,236,237,5,110,
	0,0,237,43,1,0,0,0,238,239,5,99,0,0,239,240,5,111,0,0,240,241,5,116,0,0,
	241,45,1,0,0,0,242,243,5,115,0,0,243,244,5,101,0,0,244,245,5,99,0,0,245,
	47,1,0,0,0,246,247,5,99,0,0,247,248,5,115,0,0,248,249,5,99,0,0,249,49,1,
	0,0,0,250,251,5,97,0,0,251,252,5,114,0,0,252,253,5,99,0,0,253,254,5,115,
	0,0,254,255,5,105,0,0,255,256,5,110,0,0,256,51,1,0,0,0,257,258,5,97,0,0,
	258,259,5,114,0,0,259,260,5,99,0,0,260,261,5,99,0,0,261,262,5,111,0,0,262,
	263,5,115,0,0,263,53,1,0,0,0,264,265,5,97,0,0,265,266,5,114,0,0,266,267,
	5,99,0,0,267,268,5,116,0,0,268,269,5,97,0,0,269,270,5,110,0,0,270,55,1,
	0,0,0,271,272,5,115,0,0,272,273,5,105,0,0,273,274,5,110,0,0,274,275,5,104,
	0,0,275,57,1,0,0,0,276,277,5,99,0,0,277,278,5,111,0,0,278,279,5,115,0,0,
	279,280,5,104,0,0,280,59,1,0,0,0,281,282,5,116,0,0,282,283,5,97,0,0,283,
	284,5,110,0,0,284,285,5,104,0,0,285,61,1,0,0,0,286,287,5,99,0,0,287,288,
	5,111,0,0,288,289,5,116,0,0,289,290,5,104,0,0,290,63,1,0,0,0,291,292,5,
	108,0,0,292,293,5,110,0,0,293,65,1,0,0,0,294,295,5,108,0,0,295,296,5,111,
	0,0,296,297,5,103,0,0,297,67,1,0,0,0,298,299,5,92,0,0,299,300,5,108,0,0,
	300,301,5,111,0,0,301,302,5,103,0,0,302,69,1,0,0,0,303,304,5,92,0,0,304,
	305,5,108,0,0,305,306,5,101,0,0,306,307,5,102,0,0,307,308,5,116,0,0,308,
	309,1,0,0,0,309,310,6,34,1,0,310,71,1,0,0,0,311,312,5,92,0,0,312,313,5,
	114,0,0,313,314,5,105,0,0,314,315,5,103,0,0,315,316,5,104,0,0,316,317,5,
	116,0,0,317,318,1,0,0,0,318,319,6,35,1,0,319,73,1,0,0,0,320,321,5,43,0,
	0,321,75,1,0,0,0,322,323,5,45,0,0,323,77,1,0,0,0,324,325,5,94,0,0,325,79,
	1,0,0,0,326,327,5,61,0,0,327,81,1,0,0,0,328,329,5,60,0,0,329,83,1,0,0,0,
	330,331,5,62,0,0,331,85,1,0,0,0,332,333,5,92,0,0,333,334,5,108,0,0,334,
	335,5,101,0,0,335,87,1,0,0,0,336,337,5,92,0,0,337,338,5,103,0,0,338,339,
	5,101,0,0,339,89,1,0,0,0,340,341,5,44,0,0,341,91,1,0,0,0,342,344,3,94,46,
	0,343,342,1,0,0,0,344,345,1,0,0,0,345,343,1,0,0,0,345,346,1,0,0,0,346,347,
	1,0,0,0,347,351,5,46,0,0,348,350,3,94,46,0,349,348,1,0,0,0,350,353,1,0,
	0,0,351,349,1,0,0,0,351,352,1,0,0,0,352,355,1,0,0,0,353,351,1,0,0,0,354,
	356,3,98,48,0,355,354,1,0,0,0,355,356,1,0,0,0,356,375,1,0,0,0,357,359,5,
	46,0,0,358,360,3,94,46,0,359,358,1,0,0,0,360,361,1,0,0,0,361,359,1,0,0,
	0,361,362,1,0,0,0,362,364,1,0,0,0,363,365,3,98,48,0,364,363,1,0,0,0,364,
	365,1,0,0,0,365,375,1,0,0,0,366,368,3,94,46,0,367,366,1,0,0,0,368,369,1,
	0,0,0,369,367,1,0,0,0,369,370,1,0,0,0,370,372,1,0,0,0,371,373,3,98,48,0,
	372,371,1,0,0,0,372,373,1,0,0,0,373,375,1,0,0,0,374,343,1,0,0,0,374,357,
	1,0,0,0,374,367,1,0,0,0,375,93,1,0,0,0,376,377,7,0,0,0,377,95,1,0,0,0,378,
	382,7,1,0,0,379,381,7,2,0,0,380,379,1,0,0,0,381,384,1,0,0,0,382,380,1,0,
	0,0,382,383,1,0,0,0,383,97,1,0,0,0,384,382,1,0,0,0,385,387,7,3,0,0,386,
	388,7,4,0,0,387,386,1,0,0,0,387,388,1,0,0,0,388,390,1,0,0,0,389,391,3,94,
	46,0,390,389,1,0,0,0,391,392,1,0,0,0,392,390,1,0,0,0,392,393,1,0,0,0,393,
	99,1,0,0,0,394,532,5,92,0,0,395,396,5,97,0,0,396,397,5,108,0,0,397,398,
	5,112,0,0,398,399,5,104,0,0,399,533,5,97,0,0,400,401,5,98,0,0,401,402,5,
	101,0,0,402,403,5,116,0,0,403,533,5,97,0,0,404,405,5,103,0,0,405,406,5,
	97,0,0,406,407,5,109,0,0,407,408,5,109,0,0,408,533,5,97,0,0,409,410,5,100,
	0,0,410,411,5,101,0,0,411,412,5,108,0,0,412,413,5,116,0,0,413,533,5,97,
	0,0,414,415,5,101,0,0,415,416,5,112,0,0,416,417,5,115,0,0,417,418,5,105,
	0,0,418,419,5,108,0,0,419,420,5,111,0,0,420,533,5,110,0,0,421,422,5,122,
	0,0,422,423,5,101,0,0,423,424,5,116,0,0,424,533,5,97,0,0,425,426,5,101,
	0,0,426,427,5,116,0,0,427,533,5,97,0,0,428,429,5,116,0,0,429,430,5,104,
	0,0,430,431,5,101,0,0,431,432,5,116,0,0,432,533,5,97,0,0,433,434,5,105,
	0,0,434,435,5,111,0,0,435,436,5,116,0,0,436,533,5,97,0,0,437,438,5,107,
	0,0,438,439,5,97,0,0,439,440,5,112,0,0,440,441,5,112,0,0,441,533,5,97,0,
	0,442,443,5,108,0,0,443,444,5,97,0,0,444,445,5,109,0,0,445,446,5,98,0,0,
	446,447,5,100,0,0,447,533,5,97,0,0,448,449,5,109,0,0,449,533,5,117,0,0,
	450,451,5,120,0,0,451,533,5,105,0,0,452,453,5,114,0,0,453,454,5,104,0,0,
	454,533,5,111,0,0,455,456,5,115,0,0,456,457,5,105,0,0,457,458,5,103,0,0,
	458,459,5,109,0,0,459,533,5,97,0,0,460,461,5,116,0,0,461,462,5,97,0,0,462,
	533,5,117,0,0,463,464,5,117,0,0,464,465,5,112,0,0,465,466,5,115,0,0,466,
	467,5,105,0,0,467,468,5,108,0,0,468,469,5,111,0,0,469,533,5,110,0,0,470,
	471,5,112,0,0,471,472,5,104,0,0,472,533,5,105,0,0,473,474,5,99,0,0,474,
	475,5,104,0,0,475,533,5,105,0,0,476,477,5,112,0,0,477,478,5,115,0,0,478,
	533,5,105,0,0,479,480,5,111,0,0,480,481,5,109,0,0,481,482,5,101,0,0,482,
	483,5,103,0,0,483,533,5,97,0,0,484,485,5,71,0,0,485,486,5,97,0,0,486,487,
	5,109,0,0,487,488,5,109,0,0,488,533,5,97,0,0,489,490,5,68,0,0,490,491,5,
	101,0,0,491,492,5,108,0,0,492,493,5,116,0,0,493,533,5,97,0,0,494,495,5,
	84,0,0,495,496,5,104,0,0,496,497,5,101,0,0,497,498,5,116,0,0,498,533,5,
	97,0,0,499,500,5,76,0,0,500,501,5,97,0,0,501,502,5,109,0,0,502,503,5,98,
	0,0,503,504,5,100,0,0,504,533,5,97,0,0,505,506,5,88,0,0,506,533,5,105,0,
	0,507,508,5,80,0,0,508,533,5,105,0,0,509,510,5,83,0,0,510,511,5,105,0,0,
	511,512,5,103,0,0,512,513,5,109,0,0,513,533,5,97,0,0,514,515,5,85,0,0,515,
	516,5,112,0,0,516,517,5,115,0,0,517,518,5,105,0,0,518,519,5,108,0,0,519,
	520,5,111,0,0,520,533,5,110,0,0,521,522,5,80,0,0,522,523,5,104,0,0,523,
	533,5,105,0,0,524,525,5,80,0,0,525,526,5,115,0,0,526,533,5,105,0,0,527,
	528,5,79,0,0,528,529,5,109,0,0,529,530,5,101,0,0,530,531,5,103,0,0,531,
	533,5,97,0,0,532,395,1,0,0,0,532,400,1,0,0,0,532,404,1,0,0,0,532,409,1,
	0,0,0,532,414,1,0,0,0,532,421,1,0,0,0,532,425,1,0,0,0,532,428,1,0,0,0,532,
	433,1,0,0,0,532,437,1,0,0,0,532,442,1,0,0,0,532,448,1,0,0,0,532,450,1,0,
	0,0,532,452,1,0,0,0,532,455,1,0,0,0,532,460,1,0,0,0,532,463,1,0,0,0,532,
	470,1,0,0,0,532,473,1,0,0,0,532,476,1,0,0,0,532,479,1,0,0,0,532,484,1,0,
	0,0,532,489,1,0,0,0,532,494,1,0,0,0,532,499,1,0,0,0,532,505,1,0,0,0,532,
	507,1,0,0,0,532,509,1,0,0,0,532,514,1,0,0,0,532,521,1,0,0,0,532,524,1,0,
	0,0,532,527,1,0,0,0,533,101,1,0,0,0,534,537,3,96,47,0,535,537,3,100,49,
	0,536,534,1,0,0,0,536,535,1,0,0,0,537,551,1,0,0,0,538,539,5,95,0,0,539,
	540,5,123,0,0,540,547,1,0,0,0,541,548,3,96,47,0,542,544,3,94,46,0,543,542,
	1,0,0,0,544,545,1,0,0,0,545,543,1,0,0,0,545,546,1,0,0,0,546,548,1,0,0,0,
	547,541,1,0,0,0,547,543,1,0,0,0,548,549,1,0,0,0,549,550,5,125,0,0,550,552,
	1,0,0,0,551,538,1,0,0,0,551,552,1,0,0,0,552,103,1,0,0,0,553,555,7,5,0,0,
	554,553,1,0,0,0,555,556,1,0,0,0,556,554,1,0,0,0,556,557,1,0,0,0,557,558,
	1,0,0,0,558,559,6,51,1,0,559,105,1,0,0,0,560,561,5,92,0,0,561,562,5,32,
	0,0,562,563,1,0,0,0,563,564,6,52,1,0,564,107,1,0,0,0,565,566,9,0,0,0,566,
	109,1,0,0,0,567,568,5,93,0,0,568,569,1,0,0,0,569,570,6,54,2,0,570,111,1,
	0,0,0,571,572,5,92,0,0,572,573,5,114,0,0,573,574,5,98,0,0,574,575,5,114,
	0,0,575,576,5,97,0,0,576,577,5,99,0,0,577,578,5,107,0,0,578,579,1,0,0,0,
	579,580,6,55,2,0,580,113,1,0,0,0,581,582,5,92,0,0,582,583,5,102,0,0,583,
	584,5,114,0,0,584,585,5,97,0,0,585,586,5,99,0,0,586,115,1,0,0,0,587,588,
	5,92,0,0,588,589,5,99,0,0,589,590,5,100,0,0,590,591,5,111,0,0,591,592,5,
	116,0,0,592,117,1,0,0,0,593,594,5,92,0,0,594,595,5,115,0,0,595,596,5,113,
	0,0,596,597,5,114,0,0,597,598,5,116,0,0,598,119,1,0,0,0,599,600,5,94,0,
	0,600,121,1,0,0,0,601,605,7,1,0,0,602,604,7,2,0,0,603,602,1,0,0,0,604,607,
	1,0,0,0,605,603,1,0,0,0,605,606,1,0,0,0,606,123,1,0,0,0,607,605,1,0,0,0,
	608,609,5,40,0,0,609,125,1,0,0,0,610,611,5,41,0,0,611,127,1,0,0,0,612,613,
	5,123,0,0,613,129,1,0,0,0,614,615,5,125,0,0,615,131,1,0,0,0,616,617,5,49,
	0,0,617,133,1,0,0,0,618,620,5,45,0,0,619,618,1,0,0,0,619,620,1,0,0,0,620,
	622,1,0,0,0,621,623,3,136,67,0,622,621,1,0,0,0,623,624,1,0,0,0,624,622,
	1,0,0,0,624,625,1,0,0,0,625,626,1,0,0,0,626,630,5,46,0,0,627,629,3,136,
	67,0,628,627,1,0,0,0,629,632,1,0,0,0,630,628,1,0,0,0,630,631,1,0,0,0,631,
	651,1,0,0,0,632,630,1,0,0,0,633,635,5,45,0,0,634,633,1,0,0,0,634,635,1,
	0,0,0,635,636,1,0,0,0,636,638,5,46,0,0,637,639,3,136,67,0,638,637,1,0,0,
	0,639,640,1,0,0,0,640,638,1,0,0,0,640,641,1,0,0,0,641,651,1,0,0,0,642,644,
	5,45,0,0,643,642,1,0,0,0,643,644,1,0,0,0,644,646,1,0,0,0,645,647,3,136,
	67,0,646,645,1,0,0,0,647,648,1,0,0,0,648,646,1,0,0,0,648,649,1,0,0,0,649,
	651,1,0,0,0,650,619,1,0,0,0,650,634,1,0,0,0,650,643,1,0,0,0,651,135,1,0,
	0,0,652,653,7,0,0,0,653,137,1,0,0,0,654,655,5,92,0,0,655,656,5,108,0,0,
	656,657,5,101,0,0,657,658,5,102,0,0,658,659,5,116,0,0,659,660,1,0,0,0,660,
	661,6,68,1,0,661,139,1,0,0,0,662,663,5,92,0,0,663,664,5,114,0,0,664,665,
	5,105,0,0,665,666,5,103,0,0,666,667,5,104,0,0,667,668,5,116,0,0,668,669,
	1,0,0,0,669,670,6,69,1,0,670,141,1,0,0,0,671,673,7,5,0,0,672,671,1,0,0,
	0,673,674,1,0,0,0,674,672,1,0,0,0,674,675,1,0,0,0,675,676,1,0,0,0,676,677,
	6,70,1,0,677,143,1,0,0,0,678,679,5,92,0,0,679,680,5,32,0,0,680,681,1,0,
	0,0,681,682,6,71,1,0,682,145,1,0,0,0,683,684,9,0,0,0,684,147,1,0,0,0,29,
	0,1,345,351,355,361,364,369,372,374,382,387,392,532,536,545,547,551,556,
	605,619,624,630,634,640,643,648,650,674,3,2,1,0,6,0,0,2,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LatexLexer.__ATN) {
			LatexLexer.__ATN = new ATNDeserializer().deserialize(LatexLexer._serializedATN);
		}

		return LatexLexer.__ATN;
	}


	static DecisionsToDFA = LatexLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}