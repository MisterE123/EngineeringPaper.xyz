// Generated from LatexLexer.g4 by ANTLR 4.12.0
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class LatexLexer extends Lexer {
	public static readonly L_BRACKET = 1;
	public static readonly ALT_L_BRACKET = 2;
	public static readonly SEMICOLON = 3;
	public static readonly L_BRACE = 4;
	public static readonly R_BRACE = 5;
	public static readonly L_PAREN = 6;
	public static readonly R_PAREN = 7;
	public static readonly VBAR = 8;
	public static readonly UNDERSCORE = 9;
	public static readonly PI = 10;
	public static readonly CMD_INT = 11;
	public static readonly CMD_MATHRM = 12;
	public static readonly CMD_FRAC = 13;
	public static readonly CMD_CDOT = 14;
	public static readonly CMD_SQRT = 15;
	public static readonly CMD_SIM = 16;
	public static readonly CMD_APPROX = 17;
	public static readonly BACK_SLASH = 18;
	public static readonly CMD_SIN = 19;
	public static readonly CMD_COS = 20;
	public static readonly CMD_TAN = 21;
	public static readonly CMD_COT = 22;
	public static readonly CMD_SEC = 23;
	public static readonly CMD_CSC = 24;
	public static readonly CMD_ARCSIN = 25;
	public static readonly CMD_ARCCOS = 26;
	public static readonly CMD_ARCTAN = 27;
	public static readonly CMD_SINH = 28;
	public static readonly CMD_COSH = 29;
	public static readonly CMD_TANH = 30;
	public static readonly CMD_COTH = 31;
	public static readonly CMD_LN = 32;
	public static readonly CMD_LOG = 33;
	public static readonly CMD_LOG_WITH_SLASH = 34;
	public static readonly CMD_LEFT = 35;
	public static readonly CMD_RIGHT = 36;
	public static readonly DOUBLE_DOLLAR_SIGN = 37;
	public static readonly ADD = 38;
	public static readonly SUB = 39;
	public static readonly CARET = 40;
	public static readonly EQ = 41;
	public static readonly LT = 42;
	public static readonly GT = 43;
	public static readonly LTE = 44;
	public static readonly GTE = 45;
	public static readonly COMMA = 46;
	public static readonly NUMBER = 47;
	public static readonly ID = 48;
	public static readonly WS = 49;
	public static readonly SLASH_SPACE = 50;
	public static readonly ERROR_CHAR = 51;
	public static readonly R_BRACKET = 52;
	public static readonly ALT_R_BRACKET = 53;
	public static readonly U_CMD_FRAC = 54;
	public static readonly U_CMD_CDOT = 55;
	public static readonly U_CMD_SQRT = 56;
	public static readonly U_CARET = 57;
	public static readonly U_NAME = 58;
	public static readonly U_L_PAREN = 59;
	public static readonly U_R_PAREN = 60;
	public static readonly U_L_BRACE = 61;
	public static readonly U_R_BRACE = 62;
	public static readonly U_ONE = 63;
	public static readonly U_NUMBER = 64;
	public static readonly U_CMD_LEFT = 65;
	public static readonly U_CMD_RIGHT = 66;
	public static readonly U_WS = 67;
	public static readonly U_SLASH_SPACE = 68;
	public static readonly U_ERROR_CHAR = 69;
	public static readonly EOF = Token.EOF;
	public static readonly UNITS = 1;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: string[] = [ null, "'['", "'\\lbrack'", 
                                                   "';'", null, null, null, 
                                                   null, "'|'", "'_'", "'\\pi'", 
                                                   "'\\int'", "'\\mathrm'", 
                                                   null, null, null, "'\\sim'", 
                                                   "'\\approx'", "'\\'", 
                                                   "'sin'", "'cos'", "'tan'", 
                                                   "'cot'", "'sec'", "'csc'", 
                                                   "'arcsin'", "'arccos'", 
                                                   "'arctan'", "'sinh'", 
                                                   "'cosh'", "'tanh'", "'coth'", 
                                                   "'ln'", "'log'", "'\\log'", 
                                                   null, null, "'$$'", "'+'", 
                                                   "'-'", null, "'='", "'<'", 
                                                   "'>'", "'\\le'", "'\\ge'", 
                                                   "','", null, null, null, 
                                                   null, null, "']'", "'\\rbrack'", 
                                                   null, null, null, null, 
                                                   null, null, null, null, 
                                                   null, "'1'" ];
	public static readonly symbolicNames: string[] = [ null, "L_BRACKET", "ALT_L_BRACKET", 
                                                    "SEMICOLON", "L_BRACE", 
                                                    "R_BRACE", "L_PAREN", 
                                                    "R_PAREN", "VBAR", "UNDERSCORE", 
                                                    "PI", "CMD_INT", "CMD_MATHRM", 
                                                    "CMD_FRAC", "CMD_CDOT", 
                                                    "CMD_SQRT", "CMD_SIM", 
                                                    "CMD_APPROX", "BACK_SLASH", 
                                                    "CMD_SIN", "CMD_COS", 
                                                    "CMD_TAN", "CMD_COT", 
                                                    "CMD_SEC", "CMD_CSC", 
                                                    "CMD_ARCSIN", "CMD_ARCCOS", 
                                                    "CMD_ARCTAN", "CMD_SINH", 
                                                    "CMD_COSH", "CMD_TANH", 
                                                    "CMD_COTH", "CMD_LN", 
                                                    "CMD_LOG", "CMD_LOG_WITH_SLASH", 
                                                    "CMD_LEFT", "CMD_RIGHT", 
                                                    "DOUBLE_DOLLAR_SIGN", 
                                                    "ADD", "SUB", "CARET", 
                                                    "EQ", "LT", "GT", "LTE", 
                                                    "GTE", "COMMA", "NUMBER", 
                                                    "ID", "WS", "SLASH_SPACE", 
                                                    "ERROR_CHAR", "R_BRACKET", 
                                                    "ALT_R_BRACKET", "U_CMD_FRAC", 
                                                    "U_CMD_CDOT", "U_CMD_SQRT", 
                                                    "U_CARET", "U_NAME", 
                                                    "U_L_PAREN", "U_R_PAREN", 
                                                    "U_L_BRACE", "U_R_BRACE", 
                                                    "U_ONE", "U_NUMBER", 
                                                    "U_CMD_LEFT", "U_CMD_RIGHT", 
                                                    "U_WS", "U_SLASH_SPACE", 
                                                    "U_ERROR_CHAR" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", "UNITS", ];

	public static readonly ruleNames: string[] = [
		"L_BRACKET", "ALT_L_BRACKET", "SEMICOLON", "L_BRACE", "R_BRACE", "L_PAREN", 
		"R_PAREN", "VBAR", "UNDERSCORE", "PI", "CMD_INT", "CMD_MATHRM", "CMD_FRAC", 
		"CMD_CDOT", "CMD_SQRT", "CMD_SIM", "CMD_APPROX", "BACK_SLASH", "CMD_SIN", 
		"CMD_COS", "CMD_TAN", "CMD_COT", "CMD_SEC", "CMD_CSC", "CMD_ARCSIN", "CMD_ARCCOS", 
		"CMD_ARCTAN", "CMD_SINH", "CMD_COSH", "CMD_TANH", "CMD_COTH", "CMD_LN", 
		"CMD_LOG", "CMD_LOG_WITH_SLASH", "CMD_LEFT", "CMD_RIGHT", "DOUBLE_DOLLAR_SIGN", 
		"ADD", "SUB", "CARET", "EQ", "LT", "GT", "LTE", "GTE", "COMMA", "NUMBER", 
		"DIGIT", "IDENTIFIER", "EXP", "GREEK_CHAR", "ID", "WS", "SLASH_SPACE", 
		"ERROR_CHAR", "R_BRACKET", "ALT_R_BRACKET", "U_CMD_FRAC", "U_CMD_CDOT", 
		"U_CMD_SQRT", "U_CARET", "U_NAME", "U_L_PAREN", "U_R_PAREN", "U_L_BRACE", 
		"U_R_BRACE", "U_ONE", "U_NUMBER", "U_DIGIT", "U_CMD_LEFT", "U_CMD_RIGHT", 
		"U_WS", "U_SLASH_SPACE", "U_ERROR_CHAR",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, LatexLexer._ATN, LatexLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "LatexLexer.g4"; }

	public get literalNames(): (string | null)[] { return LatexLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return LatexLexer.symbolicNames; }
	public get ruleNames(): string[] { return LatexLexer.ruleNames; }

	public get serializedATN(): number[] { return LatexLexer._serializedATN; }

	public get channelNames(): string[] { return LatexLexer.channelNames; }

	public get modeNames(): string[] { return LatexLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,69,692,6,-1,6,-1,
	2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,
	2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,
	7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,
	23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,
	2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
	38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
	7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,
	52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,
	2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,
	67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,1,0,
	1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,
	1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
	1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,
	12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
	1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,18,1,
	18,1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
	1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,
	24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,
	1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,
	29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,
	1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,
	35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,38,1,38,
	1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,
	44,1,44,1,45,1,45,1,46,4,46,351,8,46,11,46,12,46,352,1,46,1,46,5,46,357,
	8,46,10,46,12,46,360,9,46,1,46,3,46,363,8,46,1,46,1,46,4,46,367,8,46,11,
	46,12,46,368,1,46,3,46,372,8,46,1,46,4,46,375,8,46,11,46,12,46,376,1,46,
	3,46,380,8,46,3,46,382,8,46,1,47,1,47,1,48,1,48,5,48,388,8,48,10,48,12,
	48,391,9,48,1,49,1,49,3,49,395,8,49,1,49,4,49,398,8,49,11,49,12,49,399,
	1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,
	50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
	1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,
	50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
	1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,
	50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
	1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,
	50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
	1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,
	50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,3,50,540,8,50,1,51,1,51,3,51,544,
	8,51,1,51,1,51,1,51,1,51,1,51,4,51,551,8,51,11,51,12,51,552,3,51,555,8,
	51,1,51,1,51,3,51,559,8,51,1,52,4,52,562,8,52,11,52,12,52,563,1,52,1,52,
	1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,
	56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,
	1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,61,1,61,5,
	61,611,8,61,10,61,12,61,614,9,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,
	1,66,1,66,1,67,3,67,627,8,67,1,67,4,67,630,8,67,11,67,12,67,631,1,67,1,
	67,5,67,636,8,67,10,67,12,67,639,9,67,1,67,3,67,642,8,67,1,67,1,67,4,67,
	646,8,67,11,67,12,67,647,1,67,3,67,651,8,67,1,67,4,67,654,8,67,11,67,12,
	67,655,3,67,658,8,67,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,
	1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,71,4,71,680,8,71,11,71,12,
	71,681,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,73,1,73,0,0,74,2,1,4,2,6,3,
	8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,12,26,13,28,14,30,15,32,16,
	34,17,36,18,38,19,40,20,42,21,44,22,46,23,48,24,50,25,52,26,54,27,56,28,
	58,29,60,30,62,31,64,32,66,33,68,34,70,35,72,36,74,37,76,38,78,39,80,40,
	82,41,84,42,86,43,88,44,90,45,92,46,94,47,96,0,98,0,100,0,102,0,104,48,
	106,49,108,50,110,51,112,52,114,53,116,54,118,55,120,56,122,57,124,58,126,
	59,128,60,130,61,132,62,134,63,136,64,138,0,140,65,142,66,144,67,146,68,
	148,69,2,0,1,6,1,0,48,57,2,0,65,90,97,122,3,0,48,57,65,90,97,122,2,0,69,
	69,101,101,2,0,43,43,45,45,3,0,9,10,13,13,32,32,744,0,2,1,0,0,0,0,4,1,0,
	0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,
	1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,
	0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,
	1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,
	0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,0,60,
	1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,
	0,0,72,1,0,0,0,0,74,1,0,0,0,0,76,1,0,0,0,0,78,1,0,0,0,0,80,1,0,0,0,0,82,
	1,0,0,0,0,84,1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,0,90,1,0,0,0,0,92,1,0,0,
	0,0,94,1,0,0,0,0,104,1,0,0,0,0,106,1,0,0,0,0,108,1,0,0,0,0,110,1,0,0,0,
	1,112,1,0,0,0,1,114,1,0,0,0,1,116,1,0,0,0,1,118,1,0,0,0,1,120,1,0,0,0,1,
	122,1,0,0,0,1,124,1,0,0,0,1,126,1,0,0,0,1,128,1,0,0,0,1,130,1,0,0,0,1,132,
	1,0,0,0,1,134,1,0,0,0,1,136,1,0,0,0,1,140,1,0,0,0,1,142,1,0,0,0,1,144,1,
	0,0,0,1,146,1,0,0,0,1,148,1,0,0,0,2,150,1,0,0,0,4,154,1,0,0,0,6,164,1,0,
	0,0,8,166,1,0,0,0,10,168,1,0,0,0,12,170,1,0,0,0,14,172,1,0,0,0,16,174,1,
	0,0,0,18,176,1,0,0,0,20,178,1,0,0,0,22,182,1,0,0,0,24,187,1,0,0,0,26,195,
	1,0,0,0,28,201,1,0,0,0,30,207,1,0,0,0,32,213,1,0,0,0,34,218,1,0,0,0,36,
	226,1,0,0,0,38,228,1,0,0,0,40,232,1,0,0,0,42,236,1,0,0,0,44,240,1,0,0,0,
	46,244,1,0,0,0,48,248,1,0,0,0,50,252,1,0,0,0,52,259,1,0,0,0,54,266,1,0,
	0,0,56,273,1,0,0,0,58,278,1,0,0,0,60,283,1,0,0,0,62,288,1,0,0,0,64,293,
	1,0,0,0,66,296,1,0,0,0,68,300,1,0,0,0,70,305,1,0,0,0,72,313,1,0,0,0,74,
	322,1,0,0,0,76,327,1,0,0,0,78,329,1,0,0,0,80,331,1,0,0,0,82,333,1,0,0,0,
	84,335,1,0,0,0,86,337,1,0,0,0,88,339,1,0,0,0,90,343,1,0,0,0,92,347,1,0,
	0,0,94,381,1,0,0,0,96,383,1,0,0,0,98,385,1,0,0,0,100,392,1,0,0,0,102,401,
	1,0,0,0,104,543,1,0,0,0,106,561,1,0,0,0,108,567,1,0,0,0,110,572,1,0,0,0,
	112,574,1,0,0,0,114,578,1,0,0,0,116,588,1,0,0,0,118,594,1,0,0,0,120,600,
	1,0,0,0,122,606,1,0,0,0,124,608,1,0,0,0,126,615,1,0,0,0,128,617,1,0,0,0,
	130,619,1,0,0,0,132,621,1,0,0,0,134,623,1,0,0,0,136,657,1,0,0,0,138,659,
	1,0,0,0,140,661,1,0,0,0,142,669,1,0,0,0,144,679,1,0,0,0,146,685,1,0,0,0,
	148,690,1,0,0,0,150,151,5,91,0,0,151,152,1,0,0,0,152,153,6,0,0,0,153,3,
	1,0,0,0,154,155,5,92,0,0,155,156,5,108,0,0,156,157,5,98,0,0,157,158,5,114,
	0,0,158,159,5,97,0,0,159,160,5,99,0,0,160,161,5,107,0,0,161,162,1,0,0,0,
	162,163,6,1,0,0,163,5,1,0,0,0,164,165,5,59,0,0,165,7,1,0,0,0,166,167,5,
	123,0,0,167,9,1,0,0,0,168,169,5,125,0,0,169,11,1,0,0,0,170,171,5,40,0,0,
	171,13,1,0,0,0,172,173,5,41,0,0,173,15,1,0,0,0,174,175,5,124,0,0,175,17,
	1,0,0,0,176,177,5,95,0,0,177,19,1,0,0,0,178,179,5,92,0,0,179,180,5,112,
	0,0,180,181,5,105,0,0,181,21,1,0,0,0,182,183,5,92,0,0,183,184,5,105,0,0,
	184,185,5,110,0,0,185,186,5,116,0,0,186,23,1,0,0,0,187,188,5,92,0,0,188,
	189,5,109,0,0,189,190,5,97,0,0,190,191,5,116,0,0,191,192,5,104,0,0,192,
	193,5,114,0,0,193,194,5,109,0,0,194,25,1,0,0,0,195,196,5,92,0,0,196,197,
	5,102,0,0,197,198,5,114,0,0,198,199,5,97,0,0,199,200,5,99,0,0,200,27,1,
	0,0,0,201,202,5,92,0,0,202,203,5,99,0,0,203,204,5,100,0,0,204,205,5,111,
	0,0,205,206,5,116,0,0,206,29,1,0,0,0,207,208,5,92,0,0,208,209,5,115,0,0,
	209,210,5,113,0,0,210,211,5,114,0,0,211,212,5,116,0,0,212,31,1,0,0,0,213,
	214,5,92,0,0,214,215,5,115,0,0,215,216,5,105,0,0,216,217,5,109,0,0,217,
	33,1,0,0,0,218,219,5,92,0,0,219,220,5,97,0,0,220,221,5,112,0,0,221,222,
	5,112,0,0,222,223,5,114,0,0,223,224,5,111,0,0,224,225,5,120,0,0,225,35,
	1,0,0,0,226,227,5,92,0,0,227,37,1,0,0,0,228,229,5,115,0,0,229,230,5,105,
	0,0,230,231,5,110,0,0,231,39,1,0,0,0,232,233,5,99,0,0,233,234,5,111,0,0,
	234,235,5,115,0,0,235,41,1,0,0,0,236,237,5,116,0,0,237,238,5,97,0,0,238,
	239,5,110,0,0,239,43,1,0,0,0,240,241,5,99,0,0,241,242,5,111,0,0,242,243,
	5,116,0,0,243,45,1,0,0,0,244,245,5,115,0,0,245,246,5,101,0,0,246,247,5,
	99,0,0,247,47,1,0,0,0,248,249,5,99,0,0,249,250,5,115,0,0,250,251,5,99,0,
	0,251,49,1,0,0,0,252,253,5,97,0,0,253,254,5,114,0,0,254,255,5,99,0,0,255,
	256,5,115,0,0,256,257,5,105,0,0,257,258,5,110,0,0,258,51,1,0,0,0,259,260,
	5,97,0,0,260,261,5,114,0,0,261,262,5,99,0,0,262,263,5,99,0,0,263,264,5,
	111,0,0,264,265,5,115,0,0,265,53,1,0,0,0,266,267,5,97,0,0,267,268,5,114,
	0,0,268,269,5,99,0,0,269,270,5,116,0,0,270,271,5,97,0,0,271,272,5,110,0,
	0,272,55,1,0,0,0,273,274,5,115,0,0,274,275,5,105,0,0,275,276,5,110,0,0,
	276,277,5,104,0,0,277,57,1,0,0,0,278,279,5,99,0,0,279,280,5,111,0,0,280,
	281,5,115,0,0,281,282,5,104,0,0,282,59,1,0,0,0,283,284,5,116,0,0,284,285,
	5,97,0,0,285,286,5,110,0,0,286,287,5,104,0,0,287,61,1,0,0,0,288,289,5,99,
	0,0,289,290,5,111,0,0,290,291,5,116,0,0,291,292,5,104,0,0,292,63,1,0,0,
	0,293,294,5,108,0,0,294,295,5,110,0,0,295,65,1,0,0,0,296,297,5,108,0,0,
	297,298,5,111,0,0,298,299,5,103,0,0,299,67,1,0,0,0,300,301,5,92,0,0,301,
	302,5,108,0,0,302,303,5,111,0,0,303,304,5,103,0,0,304,69,1,0,0,0,305,306,
	5,92,0,0,306,307,5,108,0,0,307,308,5,101,0,0,308,309,5,102,0,0,309,310,
	5,116,0,0,310,311,1,0,0,0,311,312,6,34,1,0,312,71,1,0,0,0,313,314,5,92,
	0,0,314,315,5,114,0,0,315,316,5,105,0,0,316,317,5,103,0,0,317,318,5,104,
	0,0,318,319,5,116,0,0,319,320,1,0,0,0,320,321,6,35,1,0,321,73,1,0,0,0,322,
	323,5,36,0,0,323,324,5,36,0,0,324,325,1,0,0,0,325,326,6,36,1,0,326,75,1,
	0,0,0,327,328,5,43,0,0,328,77,1,0,0,0,329,330,5,45,0,0,330,79,1,0,0,0,331,
	332,5,94,0,0,332,81,1,0,0,0,333,334,5,61,0,0,334,83,1,0,0,0,335,336,5,60,
	0,0,336,85,1,0,0,0,337,338,5,62,0,0,338,87,1,0,0,0,339,340,5,92,0,0,340,
	341,5,108,0,0,341,342,5,101,0,0,342,89,1,0,0,0,343,344,5,92,0,0,344,345,
	5,103,0,0,345,346,5,101,0,0,346,91,1,0,0,0,347,348,5,44,0,0,348,93,1,0,
	0,0,349,351,3,96,47,0,350,349,1,0,0,0,351,352,1,0,0,0,352,350,1,0,0,0,352,
	353,1,0,0,0,353,354,1,0,0,0,354,358,5,46,0,0,355,357,3,96,47,0,356,355,
	1,0,0,0,357,360,1,0,0,0,358,356,1,0,0,0,358,359,1,0,0,0,359,362,1,0,0,0,
	360,358,1,0,0,0,361,363,3,100,49,0,362,361,1,0,0,0,362,363,1,0,0,0,363,
	382,1,0,0,0,364,366,5,46,0,0,365,367,3,96,47,0,366,365,1,0,0,0,367,368,
	1,0,0,0,368,366,1,0,0,0,368,369,1,0,0,0,369,371,1,0,0,0,370,372,3,100,49,
	0,371,370,1,0,0,0,371,372,1,0,0,0,372,382,1,0,0,0,373,375,3,96,47,0,374,
	373,1,0,0,0,375,376,1,0,0,0,376,374,1,0,0,0,376,377,1,0,0,0,377,379,1,0,
	0,0,378,380,3,100,49,0,379,378,1,0,0,0,379,380,1,0,0,0,380,382,1,0,0,0,
	381,350,1,0,0,0,381,364,1,0,0,0,381,374,1,0,0,0,382,95,1,0,0,0,383,384,
	7,0,0,0,384,97,1,0,0,0,385,389,7,1,0,0,386,388,7,2,0,0,387,386,1,0,0,0,
	388,391,1,0,0,0,389,387,1,0,0,0,389,390,1,0,0,0,390,99,1,0,0,0,391,389,
	1,0,0,0,392,394,7,3,0,0,393,395,7,4,0,0,394,393,1,0,0,0,394,395,1,0,0,0,
	395,397,1,0,0,0,396,398,3,96,47,0,397,396,1,0,0,0,398,399,1,0,0,0,399,397,
	1,0,0,0,399,400,1,0,0,0,400,101,1,0,0,0,401,539,5,92,0,0,402,403,5,97,0,
	0,403,404,5,108,0,0,404,405,5,112,0,0,405,406,5,104,0,0,406,540,5,97,0,
	0,407,408,5,98,0,0,408,409,5,101,0,0,409,410,5,116,0,0,410,540,5,97,0,0,
	411,412,5,103,0,0,412,413,5,97,0,0,413,414,5,109,0,0,414,415,5,109,0,0,
	415,540,5,97,0,0,416,417,5,100,0,0,417,418,5,101,0,0,418,419,5,108,0,0,
	419,420,5,116,0,0,420,540,5,97,0,0,421,422,5,101,0,0,422,423,5,112,0,0,
	423,424,5,115,0,0,424,425,5,105,0,0,425,426,5,108,0,0,426,427,5,111,0,0,
	427,540,5,110,0,0,428,429,5,122,0,0,429,430,5,101,0,0,430,431,5,116,0,0,
	431,540,5,97,0,0,432,433,5,101,0,0,433,434,5,116,0,0,434,540,5,97,0,0,435,
	436,5,116,0,0,436,437,5,104,0,0,437,438,5,101,0,0,438,439,5,116,0,0,439,
	540,5,97,0,0,440,441,5,105,0,0,441,442,5,111,0,0,442,443,5,116,0,0,443,
	540,5,97,0,0,444,445,5,107,0,0,445,446,5,97,0,0,446,447,5,112,0,0,447,448,
	5,112,0,0,448,540,5,97,0,0,449,450,5,108,0,0,450,451,5,97,0,0,451,452,5,
	109,0,0,452,453,5,98,0,0,453,454,5,100,0,0,454,540,5,97,0,0,455,456,5,109,
	0,0,456,540,5,117,0,0,457,458,5,120,0,0,458,540,5,105,0,0,459,460,5,114,
	0,0,460,461,5,104,0,0,461,540,5,111,0,0,462,463,5,115,0,0,463,464,5,105,
	0,0,464,465,5,103,0,0,465,466,5,109,0,0,466,540,5,97,0,0,467,468,5,116,
	0,0,468,469,5,97,0,0,469,540,5,117,0,0,470,471,5,117,0,0,471,472,5,112,
	0,0,472,473,5,115,0,0,473,474,5,105,0,0,474,475,5,108,0,0,475,476,5,111,
	0,0,476,540,5,110,0,0,477,478,5,112,0,0,478,479,5,104,0,0,479,540,5,105,
	0,0,480,481,5,99,0,0,481,482,5,104,0,0,482,540,5,105,0,0,483,484,5,112,
	0,0,484,485,5,115,0,0,485,540,5,105,0,0,486,487,5,111,0,0,487,488,5,109,
	0,0,488,489,5,101,0,0,489,490,5,103,0,0,490,540,5,97,0,0,491,492,5,71,0,
	0,492,493,5,97,0,0,493,494,5,109,0,0,494,495,5,109,0,0,495,540,5,97,0,0,
	496,497,5,68,0,0,497,498,5,101,0,0,498,499,5,108,0,0,499,500,5,116,0,0,
	500,540,5,97,0,0,501,502,5,84,0,0,502,503,5,104,0,0,503,504,5,101,0,0,504,
	505,5,116,0,0,505,540,5,97,0,0,506,507,5,76,0,0,507,508,5,97,0,0,508,509,
	5,109,0,0,509,510,5,98,0,0,510,511,5,100,0,0,511,540,5,97,0,0,512,513,5,
	88,0,0,513,540,5,105,0,0,514,515,5,80,0,0,515,540,5,105,0,0,516,517,5,83,
	0,0,517,518,5,105,0,0,518,519,5,103,0,0,519,520,5,109,0,0,520,540,5,97,
	0,0,521,522,5,85,0,0,522,523,5,112,0,0,523,524,5,115,0,0,524,525,5,105,
	0,0,525,526,5,108,0,0,526,527,5,111,0,0,527,540,5,110,0,0,528,529,5,80,
	0,0,529,530,5,104,0,0,530,540,5,105,0,0,531,532,5,80,0,0,532,533,5,115,
	0,0,533,540,5,105,0,0,534,535,5,79,0,0,535,536,5,109,0,0,536,537,5,101,
	0,0,537,538,5,103,0,0,538,540,5,97,0,0,539,402,1,0,0,0,539,407,1,0,0,0,
	539,411,1,0,0,0,539,416,1,0,0,0,539,421,1,0,0,0,539,428,1,0,0,0,539,432,
	1,0,0,0,539,435,1,0,0,0,539,440,1,0,0,0,539,444,1,0,0,0,539,449,1,0,0,0,
	539,455,1,0,0,0,539,457,1,0,0,0,539,459,1,0,0,0,539,462,1,0,0,0,539,467,
	1,0,0,0,539,470,1,0,0,0,539,477,1,0,0,0,539,480,1,0,0,0,539,483,1,0,0,0,
	539,486,1,0,0,0,539,491,1,0,0,0,539,496,1,0,0,0,539,501,1,0,0,0,539,506,
	1,0,0,0,539,512,1,0,0,0,539,514,1,0,0,0,539,516,1,0,0,0,539,521,1,0,0,0,
	539,528,1,0,0,0,539,531,1,0,0,0,539,534,1,0,0,0,540,103,1,0,0,0,541,544,
	3,98,48,0,542,544,3,102,50,0,543,541,1,0,0,0,543,542,1,0,0,0,544,558,1,
	0,0,0,545,546,5,95,0,0,546,547,5,123,0,0,547,554,1,0,0,0,548,555,3,98,48,
	0,549,551,3,96,47,0,550,549,1,0,0,0,551,552,1,0,0,0,552,550,1,0,0,0,552,
	553,1,0,0,0,553,555,1,0,0,0,554,548,1,0,0,0,554,550,1,0,0,0,555,556,1,0,
	0,0,556,557,5,125,0,0,557,559,1,0,0,0,558,545,1,0,0,0,558,559,1,0,0,0,559,
	105,1,0,0,0,560,562,7,5,0,0,561,560,1,0,0,0,562,563,1,0,0,0,563,561,1,0,
	0,0,563,564,1,0,0,0,564,565,1,0,0,0,565,566,6,52,1,0,566,107,1,0,0,0,567,
	568,5,92,0,0,568,569,5,32,0,0,569,570,1,0,0,0,570,571,6,53,1,0,571,109,
	1,0,0,0,572,573,9,0,0,0,573,111,1,0,0,0,574,575,5,93,0,0,575,576,1,0,0,
	0,576,577,6,55,2,0,577,113,1,0,0,0,578,579,5,92,0,0,579,580,5,114,0,0,580,
	581,5,98,0,0,581,582,5,114,0,0,582,583,5,97,0,0,583,584,5,99,0,0,584,585,
	5,107,0,0,585,586,1,0,0,0,586,587,6,56,2,0,587,115,1,0,0,0,588,589,5,92,
	0,0,589,590,5,102,0,0,590,591,5,114,0,0,591,592,5,97,0,0,592,593,5,99,0,
	0,593,117,1,0,0,0,594,595,5,92,0,0,595,596,5,99,0,0,596,597,5,100,0,0,597,
	598,5,111,0,0,598,599,5,116,0,0,599,119,1,0,0,0,600,601,5,92,0,0,601,602,
	5,115,0,0,602,603,5,113,0,0,603,604,5,114,0,0,604,605,5,116,0,0,605,121,
	1,0,0,0,606,607,5,94,0,0,607,123,1,0,0,0,608,612,7,1,0,0,609,611,7,2,0,
	0,610,609,1,0,0,0,611,614,1,0,0,0,612,610,1,0,0,0,612,613,1,0,0,0,613,125,
	1,0,0,0,614,612,1,0,0,0,615,616,5,40,0,0,616,127,1,0,0,0,617,618,5,41,0,
	0,618,129,1,0,0,0,619,620,5,123,0,0,620,131,1,0,0,0,621,622,5,125,0,0,622,
	133,1,0,0,0,623,624,5,49,0,0,624,135,1,0,0,0,625,627,5,45,0,0,626,625,1,
	0,0,0,626,627,1,0,0,0,627,629,1,0,0,0,628,630,3,138,68,0,629,628,1,0,0,
	0,630,631,1,0,0,0,631,629,1,0,0,0,631,632,1,0,0,0,632,633,1,0,0,0,633,637,
	5,46,0,0,634,636,3,138,68,0,635,634,1,0,0,0,636,639,1,0,0,0,637,635,1,0,
	0,0,637,638,1,0,0,0,638,658,1,0,0,0,639,637,1,0,0,0,640,642,5,45,0,0,641,
	640,1,0,0,0,641,642,1,0,0,0,642,643,1,0,0,0,643,645,5,46,0,0,644,646,3,
	138,68,0,645,644,1,0,0,0,646,647,1,0,0,0,647,645,1,0,0,0,647,648,1,0,0,
	0,648,658,1,0,0,0,649,651,5,45,0,0,650,649,1,0,0,0,650,651,1,0,0,0,651,
	653,1,0,0,0,652,654,3,138,68,0,653,652,1,0,0,0,654,655,1,0,0,0,655,653,
	1,0,0,0,655,656,1,0,0,0,656,658,1,0,0,0,657,626,1,0,0,0,657,641,1,0,0,0,
	657,650,1,0,0,0,658,137,1,0,0,0,659,660,7,0,0,0,660,139,1,0,0,0,661,662,
	5,92,0,0,662,663,5,108,0,0,663,664,5,101,0,0,664,665,5,102,0,0,665,666,
	5,116,0,0,666,667,1,0,0,0,667,668,6,69,1,0,668,141,1,0,0,0,669,670,5,92,
	0,0,670,671,5,114,0,0,671,672,5,105,0,0,672,673,5,103,0,0,673,674,5,104,
	0,0,674,675,5,116,0,0,675,676,1,0,0,0,676,677,6,70,1,0,677,143,1,0,0,0,
	678,680,7,5,0,0,679,678,1,0,0,0,680,681,1,0,0,0,681,679,1,0,0,0,681,682,
	1,0,0,0,682,683,1,0,0,0,683,684,6,71,1,0,684,145,1,0,0,0,685,686,5,92,0,
	0,686,687,5,32,0,0,687,688,1,0,0,0,688,689,6,72,1,0,689,147,1,0,0,0,690,
	691,9,0,0,0,691,149,1,0,0,0,29,0,1,352,358,362,368,371,376,379,381,389,
	394,399,539,543,552,554,558,563,612,626,631,637,641,647,650,655,657,681,
	3,2,1,0,6,0,0,2,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LatexLexer.__ATN) {
			LatexLexer.__ATN = new ATNDeserializer().deserialize(LatexLexer._serializedATN);
		}

		return LatexLexer.__ATN;
	}


	static DecisionsToDFA = LatexLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}