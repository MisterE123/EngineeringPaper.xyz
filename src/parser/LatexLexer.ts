// Generated from LatexLexer.g4 by ANTLR 4.12.0
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class LatexLexer extends Lexer {
	public static readonly L_BRACKET = 1;
	public static readonly ALT_L_BRACKET = 2;
	public static readonly SEMICOLON = 3;
	public static readonly L_BRACE = 4;
	public static readonly R_BRACE = 5;
	public static readonly L_PAREN = 6;
	public static readonly R_PAREN = 7;
	public static readonly VBAR = 8;
	public static readonly DOUBLE_VBAR = 9;
	public static readonly UNDERSCORE = 10;
	public static readonly PI = 11;
	public static readonly CMD_INT = 12;
	public static readonly CMD_INT_UNDERSCORE = 13;
	public static readonly CMD_INT_UNDERSCORE_SINGLE_CHAR_NUMBER = 14;
	public static readonly CMD_INT_UNDERSCORE_SINGLE_CHAR_ID = 15;
	public static readonly CMD_MATHRM = 16;
	public static readonly CMD_FRAC = 17;
	public static readonly CMD_FRAC_INTS = 18;
	public static readonly CMD_CDOT = 19;
	public static readonly CMD_TIMES = 20;
	public static readonly CMD_SQRT = 21;
	public static readonly CMD_SQRT_INT = 22;
	public static readonly CMD_SIM = 23;
	public static readonly CMD_APPROX = 24;
	public static readonly TRANSPOSE = 25;
	public static readonly BACKSLASH = 26;
	public static readonly CMD_SIN = 27;
	public static readonly CMD_COS = 28;
	public static readonly CMD_TAN = 29;
	public static readonly CMD_COT = 30;
	public static readonly CMD_SEC = 31;
	public static readonly CMD_CSC = 32;
	public static readonly CMD_ARCSIN = 33;
	public static readonly CMD_ARCCOS = 34;
	public static readonly CMD_ARCTAN = 35;
	public static readonly CMD_SINH = 36;
	public static readonly CMD_COSH = 37;
	public static readonly CMD_TANH = 38;
	public static readonly CMD_COTH = 39;
	public static readonly CMD_LN = 40;
	public static readonly CMD_LOG = 41;
	public static readonly CMD_SLASH_LOG_UNDERSCORE = 42;
	public static readonly CMD_SLASH_LOG_UNDERSCORE_SINGLE_CHAR_NUMBER = 43;
	public static readonly CMD_SLASH_LOG_UNDERSCORE_SINGLE_CHAR_ID = 44;
	public static readonly COMMENT = 45;
	public static readonly CMD_LEFT = 46;
	public static readonly CMD_RIGHT = 47;
	public static readonly DOUBLE_DOLLAR_SIGN = 48;
	public static readonly ADD = 49;
	public static readonly SUB = 50;
	public static readonly CARET = 51;
	public static readonly EQ = 52;
	public static readonly LT = 53;
	public static readonly GT = 54;
	public static readonly LTE = 55;
	public static readonly GTE = 56;
	public static readonly COMMA = 57;
	public static readonly CARET_SINGLE_CHAR_NUMBER = 58;
	public static readonly CARET_SINGLE_CHAR_ID = 59;
	public static readonly NUMBER = 60;
	public static readonly BEGIN_MATRIX = 61;
	public static readonly END_MATRIX = 62;
	public static readonly AMPERSAND = 63;
	public static readonly DOUBLE_BACKSLASH = 64;
	public static readonly UNDERSCORE_SUBSCRIPT = 65;
	public static readonly CARET_SINGLE_CHAR_ID_UNDERSCORE_SUBSCRIPT = 66;
	public static readonly ID = 67;
	public static readonly WS = 68;
	public static readonly SLASH_SPACE = 69;
	public static readonly SLASH_COLON = 70;
	public static readonly ERROR_CHAR = 71;
	public static readonly R_BRACKET = 72;
	public static readonly ALT_R_BRACKET = 73;
	public static readonly U_CMD_FRAC = 74;
	public static readonly U_CMD_FRAC_INTS = 75;
	public static readonly U_CMD_CDOT = 76;
	public static readonly U_CMD_TIMES = 77;
	public static readonly U_CMD_SQRT = 78;
	public static readonly U_COMMA = 79;
	public static readonly U_CARET = 80;
	public static readonly U_NAME = 81;
	public static readonly U_L_PAREN = 82;
	public static readonly U_R_PAREN = 83;
	public static readonly U_L_BRACE = 84;
	public static readonly U_R_BRACE = 85;
	public static readonly U_ONE = 86;
	public static readonly U_NUMBER = 87;
	public static readonly U_CMD_LEFT = 88;
	public static readonly U_CMD_RIGHT = 89;
	public static readonly U_WS = 90;
	public static readonly U_SLASH_SPACE = 91;
	public static readonly U_ERROR_CHAR = 92;
	public static readonly EOF = Token.EOF;
	public static readonly UNITS = 1;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: string[] = [ null, "'['", "'\\lbrack'", 
                                                   "';'", null, null, null, 
                                                   null, "'|'", null, "'_'", 
                                                   "'\\pi'", "'\\int'", 
                                                   null, null, null, "'\\mathrm'", 
                                                   null, null, null, null, 
                                                   null, null, "'\\sim'", 
                                                   "'\\approx'", "'^{\\mathrm{T}}'", 
                                                   "'\\'", "'sin'", "'cos'", 
                                                   "'tan'", "'cot'", "'sec'", 
                                                   "'csc'", "'arcsin'", 
                                                   "'arccos'", "'arctan'", 
                                                   "'sinh'", "'cosh'", "'tanh'", 
                                                   "'coth'", "'ln'", "'log'", 
                                                   null, null, null, null, 
                                                   null, null, "'$$'", "'+'", 
                                                   "'-'", null, "'='", "'<'", 
                                                   "'>'", "'\\le'", "'\\ge'", 
                                                   null, null, null, null, 
                                                   "'\\begin{bmatrix}'", 
                                                   "'\\end{bmatrix}'", "'&'", 
                                                   "'\\\\'", null, null, 
                                                   null, null, null, "'\\:'", 
                                                   null, "']'", "'\\rbrack'", 
                                                   null, null, null, null, 
                                                   null, null, null, null, 
                                                   null, null, null, null, 
                                                   "'1'" ];
	public static readonly symbolicNames: string[] = [ null, "L_BRACKET", "ALT_L_BRACKET", 
                                                    "SEMICOLON", "L_BRACE", 
                                                    "R_BRACE", "L_PAREN", 
                                                    "R_PAREN", "VBAR", "DOUBLE_VBAR", 
                                                    "UNDERSCORE", "PI", 
                                                    "CMD_INT", "CMD_INT_UNDERSCORE", 
                                                    "CMD_INT_UNDERSCORE_SINGLE_CHAR_NUMBER", 
                                                    "CMD_INT_UNDERSCORE_SINGLE_CHAR_ID", 
                                                    "CMD_MATHRM", "CMD_FRAC", 
                                                    "CMD_FRAC_INTS", "CMD_CDOT", 
                                                    "CMD_TIMES", "CMD_SQRT", 
                                                    "CMD_SQRT_INT", "CMD_SIM", 
                                                    "CMD_APPROX", "TRANSPOSE", 
                                                    "BACKSLASH", "CMD_SIN", 
                                                    "CMD_COS", "CMD_TAN", 
                                                    "CMD_COT", "CMD_SEC", 
                                                    "CMD_CSC", "CMD_ARCSIN", 
                                                    "CMD_ARCCOS", "CMD_ARCTAN", 
                                                    "CMD_SINH", "CMD_COSH", 
                                                    "CMD_TANH", "CMD_COTH", 
                                                    "CMD_LN", "CMD_LOG", 
                                                    "CMD_SLASH_LOG_UNDERSCORE", 
                                                    "CMD_SLASH_LOG_UNDERSCORE_SINGLE_CHAR_NUMBER", 
                                                    "CMD_SLASH_LOG_UNDERSCORE_SINGLE_CHAR_ID", 
                                                    "COMMENT", "CMD_LEFT", 
                                                    "CMD_RIGHT", "DOUBLE_DOLLAR_SIGN", 
                                                    "ADD", "SUB", "CARET", 
                                                    "EQ", "LT", "GT", "LTE", 
                                                    "GTE", "COMMA", "CARET_SINGLE_CHAR_NUMBER", 
                                                    "CARET_SINGLE_CHAR_ID", 
                                                    "NUMBER", "BEGIN_MATRIX", 
                                                    "END_MATRIX", "AMPERSAND", 
                                                    "DOUBLE_BACKSLASH", 
                                                    "UNDERSCORE_SUBSCRIPT", 
                                                    "CARET_SINGLE_CHAR_ID_UNDERSCORE_SUBSCRIPT", 
                                                    "ID", "WS", "SLASH_SPACE", 
                                                    "SLASH_COLON", "ERROR_CHAR", 
                                                    "R_BRACKET", "ALT_R_BRACKET", 
                                                    "U_CMD_FRAC", "U_CMD_FRAC_INTS", 
                                                    "U_CMD_CDOT", "U_CMD_TIMES", 
                                                    "U_CMD_SQRT", "U_COMMA", 
                                                    "U_CARET", "U_NAME", 
                                                    "U_L_PAREN", "U_R_PAREN", 
                                                    "U_L_BRACE", "U_R_BRACE", 
                                                    "U_ONE", "U_NUMBER", 
                                                    "U_CMD_LEFT", "U_CMD_RIGHT", 
                                                    "U_WS", "U_SLASH_SPACE", 
                                                    "U_ERROR_CHAR" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", "UNITS", ];

	public static readonly ruleNames: string[] = [
		"L_BRACKET", "ALT_L_BRACKET", "SEMICOLON", "L_BRACE", "R_BRACE", "L_PAREN", 
		"R_PAREN", "VBAR", "DOUBLE_VBAR", "UNDERSCORE", "PI", "CMD_INT", "CMD_INT_UNDERSCORE", 
		"CMD_INT_UNDERSCORE_SINGLE_CHAR_NUMBER", "CMD_INT_UNDERSCORE_SINGLE_CHAR_ID", 
		"CMD_MATHRM", "CMD_FRAC", "CMD_FRAC_INTS", "CMD_CDOT", "CMD_TIMES", "CMD_SQRT", 
		"CMD_SQRT_INT", "CMD_SIM", "CMD_APPROX", "TRANSPOSE", "BACKSLASH", "CMD_SIN", 
		"CMD_COS", "CMD_TAN", "CMD_COT", "CMD_SEC", "CMD_CSC", "CMD_ARCSIN", "CMD_ARCCOS", 
		"CMD_ARCTAN", "CMD_SINH", "CMD_COSH", "CMD_TANH", "CMD_COTH", "CMD_LN", 
		"CMD_LOG", "CMD_SLASH_LOG_UNDERSCORE", "CMD_SLASH_LOG_UNDERSCORE_SINGLE_CHAR_NUMBER", 
		"CMD_SLASH_LOG_UNDERSCORE_SINGLE_CHAR_ID", "COMMENT", "CMD_LEFT", "CMD_RIGHT", 
		"DOUBLE_DOLLAR_SIGN", "ADD", "SUB", "CARET", "EQ", "LT", "GT", "LTE", 
		"GTE", "COMMA", "CARET_SINGLE_CHAR_NUMBER", "CARET_SINGLE_CHAR_ID", "NUMBER", 
		"DIGIT", "IDENTIFIER", "EXP", "GREEK_CHAR", "BEGIN_MATRIX", "END_MATRIX", 
		"AMPERSAND", "DOUBLE_BACKSLASH", "UNDERSCORE_SUBSCRIPT", "CARET_SINGLE_CHAR_ID_UNDERSCORE_SUBSCRIPT", 
		"ID", "WS", "SLASH_SPACE", "SLASH_COLON", "ERROR_CHAR", "R_BRACKET", "ALT_R_BRACKET", 
		"U_CMD_FRAC", "U_CMD_FRAC_INTS", "U_CMD_CDOT", "U_CMD_TIMES", "U_CMD_SQRT", 
		"U_COMMA", "U_CARET", "U_NAME", "U_L_PAREN", "U_R_PAREN", "U_L_BRACE", 
		"U_R_BRACE", "U_ONE", "U_NUMBER", "U_DIGIT", "U_CMD_LEFT", "U_CMD_RIGHT", 
		"U_WS", "U_SLASH_SPACE", "U_ERROR_CHAR",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, LatexLexer._ATN, LatexLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "LatexLexer.g4"; }

	public get literalNames(): (string | null)[] { return LatexLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return LatexLexer.symbolicNames; }
	public get ruleNames(): string[] { return LatexLexer.ruleNames; }

	public get serializedATN(): number[] { return LatexLexer._serializedATN; }

	public get channelNames(): string[] { return LatexLexer.channelNames; }

	public get modeNames(): string[] { return LatexLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,92,980,6,-1,6,-1,
	2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,
	2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,
	7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,
	23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,
	2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
	38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
	7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,
	52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,
	2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,
	67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,
	7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,
	81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,
	2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,
	96,7,96,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,
	1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,
	230,8,8,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,
	1,12,1,12,1,12,1,12,5,12,249,8,12,10,12,12,12,252,9,12,1,12,1,12,1,13,1,
	13,1,13,1,13,1,13,1,13,5,13,262,8,13,10,13,12,13,265,9,13,1,13,1,13,1,13,
	1,14,1,14,1,14,1,14,1,14,1,14,5,14,276,8,14,10,14,12,14,279,9,14,1,14,1,
	14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,
	1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,5,17,305,8,17,10,17,12,17,308,9,
	17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,
	1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,5,21,339,8,21,10,21,12,21,342,9,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,
	1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,
	24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,26,1,26,1,27,
	1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,
	30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,
	1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,
	35,1,35,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
	1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,
	41,5,41,453,8,41,10,41,12,41,456,9,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,
	1,42,5,42,466,8,42,10,42,12,42,469,9,42,1,42,1,42,1,42,1,43,1,43,1,43,1,
	43,1,43,1,43,5,43,480,8,43,10,43,12,43,483,9,43,1,43,1,43,1,43,1,44,1,44,
	1,44,1,44,1,44,1,44,1,44,1,44,5,44,496,8,44,10,44,12,44,499,9,44,1,44,1,
	44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,
	1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,49,1,49,1,
	50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,54,1,54,1,55,1,55,1,55,
	1,55,1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,58,1,59,4,59,556,8,59,11,59,12,
	59,557,1,59,1,59,5,59,562,8,59,10,59,12,59,565,9,59,1,59,3,59,568,8,59,
	1,59,1,59,4,59,572,8,59,11,59,12,59,573,1,59,3,59,577,8,59,1,59,4,59,580,
	8,59,11,59,12,59,581,1,59,3,59,585,8,59,3,59,587,8,59,1,60,1,60,1,61,1,
	61,5,61,593,8,61,10,61,12,61,596,9,61,1,62,1,62,3,62,600,8,62,1,62,4,62,
	603,8,62,11,62,12,62,604,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
	63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
	1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
	63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
	1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
	63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
	1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
	63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
	1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,
	63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
	3,63,747,8,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,
	64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,
	1,65,1,65,1,65,1,65,1,66,1,66,1,67,1,67,1,67,1,68,5,68,785,8,68,10,68,12,
	68,788,9,68,1,68,1,68,1,68,1,68,4,68,794,8,68,11,68,12,68,795,1,68,1,68,
	5,68,800,8,68,10,68,12,68,803,9,68,1,68,1,68,3,68,807,8,68,1,69,1,69,1,
	69,1,69,1,70,1,70,3,70,815,8,70,1,70,3,70,818,8,70,1,71,4,71,821,8,71,11,
	71,12,71,822,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,73,
	1,74,1,74,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,
	76,1,76,1,77,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,78,1,78,
	5,78,866,8,78,10,78,12,78,869,9,78,1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,
	79,1,79,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,81,
	1,82,1,82,1,83,1,83,1,84,1,84,5,84,899,8,84,10,84,12,84,902,9,84,1,85,1,
	85,1,86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,90,3,90,915,8,90,1,90,4,90,
	918,8,90,11,90,12,90,919,1,90,1,90,5,90,924,8,90,10,90,12,90,927,9,90,1,
	90,3,90,930,8,90,1,90,1,90,4,90,934,8,90,11,90,12,90,935,1,90,3,90,939,
	8,90,1,90,4,90,942,8,90,11,90,12,90,943,3,90,946,8,90,1,91,1,91,1,92,1,
	92,1,92,1,92,1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,
	1,93,1,94,4,94,968,8,94,11,94,12,94,969,1,94,1,94,1,95,1,95,1,95,1,95,1,
	95,1,96,1,96,1,497,0,97,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,
	22,11,24,12,26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,
	46,23,48,24,50,25,52,26,54,27,56,28,58,29,60,30,62,31,64,32,66,33,68,34,
	70,35,72,36,74,37,76,38,78,39,80,40,82,41,84,42,86,43,88,44,90,45,92,46,
	94,47,96,48,98,49,100,50,102,51,104,52,106,53,108,54,110,55,112,56,114,
	57,116,58,118,59,120,60,122,0,124,0,126,0,128,0,130,61,132,62,134,63,136,
	64,138,65,140,66,142,67,144,68,146,69,148,70,150,71,152,72,154,73,156,74,
	158,75,160,76,162,77,164,78,166,79,168,80,170,81,172,82,174,83,176,84,178,
	85,180,86,182,87,184,0,186,88,188,89,190,90,192,91,194,92,2,0,1,7,1,0,32,
	32,1,0,48,57,2,0,65,90,97,122,3,0,48,57,65,90,97,122,2,0,69,69,101,101,
	2,0,43,43,45,45,3,0,9,10,13,13,32,32,1046,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,
	0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,
	18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,
	0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,
	40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,
	0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,0,60,1,0,0,0,0,
	62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,0,0,72,1,0,
	0,0,0,74,1,0,0,0,0,76,1,0,0,0,0,78,1,0,0,0,0,80,1,0,0,0,0,82,1,0,0,0,0,
	84,1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,0,90,1,0,0,0,0,92,1,0,0,0,0,94,1,0,
	0,0,0,96,1,0,0,0,0,98,1,0,0,0,0,100,1,0,0,0,0,102,1,0,0,0,0,104,1,0,0,0,
	0,106,1,0,0,0,0,108,1,0,0,0,0,110,1,0,0,0,0,112,1,0,0,0,0,114,1,0,0,0,0,
	116,1,0,0,0,0,118,1,0,0,0,0,120,1,0,0,0,0,130,1,0,0,0,0,132,1,0,0,0,0,134,
	1,0,0,0,0,136,1,0,0,0,0,138,1,0,0,0,0,140,1,0,0,0,0,142,1,0,0,0,0,144,1,
	0,0,0,0,146,1,0,0,0,0,148,1,0,0,0,0,150,1,0,0,0,1,152,1,0,0,0,1,154,1,0,
	0,0,1,156,1,0,0,0,1,158,1,0,0,0,1,160,1,0,0,0,1,162,1,0,0,0,1,164,1,0,0,
	0,1,166,1,0,0,0,1,168,1,0,0,0,1,170,1,0,0,0,1,172,1,0,0,0,1,174,1,0,0,0,
	1,176,1,0,0,0,1,178,1,0,0,0,1,180,1,0,0,0,1,182,1,0,0,0,1,186,1,0,0,0,1,
	188,1,0,0,0,1,190,1,0,0,0,1,192,1,0,0,0,1,194,1,0,0,0,2,196,1,0,0,0,4,200,
	1,0,0,0,6,210,1,0,0,0,8,212,1,0,0,0,10,214,1,0,0,0,12,216,1,0,0,0,14,218,
	1,0,0,0,16,220,1,0,0,0,18,229,1,0,0,0,20,231,1,0,0,0,22,233,1,0,0,0,24,
	237,1,0,0,0,26,242,1,0,0,0,28,255,1,0,0,0,30,269,1,0,0,0,32,283,1,0,0,0,
	34,291,1,0,0,0,36,297,1,0,0,0,38,312,1,0,0,0,40,318,1,0,0,0,42,325,1,0,
	0,0,44,331,1,0,0,0,46,345,1,0,0,0,48,350,1,0,0,0,50,358,1,0,0,0,52,372,
	1,0,0,0,54,374,1,0,0,0,56,378,1,0,0,0,58,382,1,0,0,0,60,386,1,0,0,0,62,
	390,1,0,0,0,64,394,1,0,0,0,66,398,1,0,0,0,68,405,1,0,0,0,70,412,1,0,0,0,
	72,419,1,0,0,0,74,424,1,0,0,0,76,429,1,0,0,0,78,434,1,0,0,0,80,439,1,0,
	0,0,82,442,1,0,0,0,84,446,1,0,0,0,86,459,1,0,0,0,88,473,1,0,0,0,90,487,
	1,0,0,0,92,504,1,0,0,0,94,512,1,0,0,0,96,521,1,0,0,0,98,526,1,0,0,0,100,
	528,1,0,0,0,102,530,1,0,0,0,104,532,1,0,0,0,106,534,1,0,0,0,108,536,1,0,
	0,0,110,538,1,0,0,0,112,542,1,0,0,0,114,546,1,0,0,0,116,548,1,0,0,0,118,
	551,1,0,0,0,120,586,1,0,0,0,122,588,1,0,0,0,124,590,1,0,0,0,126,597,1,0,
	0,0,128,606,1,0,0,0,130,748,1,0,0,0,132,764,1,0,0,0,134,778,1,0,0,0,136,
	780,1,0,0,0,138,806,1,0,0,0,140,808,1,0,0,0,142,814,1,0,0,0,144,820,1,0,
	0,0,146,826,1,0,0,0,148,831,1,0,0,0,150,836,1,0,0,0,152,838,1,0,0,0,154,
	842,1,0,0,0,156,852,1,0,0,0,158,858,1,0,0,0,160,873,1,0,0,0,162,879,1,0,
	0,0,164,886,1,0,0,0,166,892,1,0,0,0,168,894,1,0,0,0,170,896,1,0,0,0,172,
	903,1,0,0,0,174,905,1,0,0,0,176,907,1,0,0,0,178,909,1,0,0,0,180,911,1,0,
	0,0,182,945,1,0,0,0,184,947,1,0,0,0,186,949,1,0,0,0,188,957,1,0,0,0,190,
	967,1,0,0,0,192,973,1,0,0,0,194,978,1,0,0,0,196,197,5,91,0,0,197,198,1,
	0,0,0,198,199,6,0,0,0,199,3,1,0,0,0,200,201,5,92,0,0,201,202,5,108,0,0,
	202,203,5,98,0,0,203,204,5,114,0,0,204,205,5,97,0,0,205,206,5,99,0,0,206,
	207,5,107,0,0,207,208,1,0,0,0,208,209,6,1,0,0,209,5,1,0,0,0,210,211,5,59,
	0,0,211,7,1,0,0,0,212,213,5,123,0,0,213,9,1,0,0,0,214,215,5,125,0,0,215,
	11,1,0,0,0,216,217,5,40,0,0,217,13,1,0,0,0,218,219,5,41,0,0,219,15,1,0,
	0,0,220,221,5,124,0,0,221,17,1,0,0,0,222,223,5,124,0,0,223,230,5,124,0,
	0,224,225,5,92,0,0,225,226,5,86,0,0,226,227,5,101,0,0,227,228,5,114,0,0,
	228,230,5,116,0,0,229,222,1,0,0,0,229,224,1,0,0,0,230,19,1,0,0,0,231,232,
	5,95,0,0,232,21,1,0,0,0,233,234,5,92,0,0,234,235,5,112,0,0,235,236,5,105,
	0,0,236,23,1,0,0,0,237,238,5,92,0,0,238,239,5,105,0,0,239,240,5,110,0,0,
	240,241,5,116,0,0,241,25,1,0,0,0,242,243,5,92,0,0,243,244,5,105,0,0,244,
	245,5,110,0,0,245,246,5,116,0,0,246,250,1,0,0,0,247,249,7,0,0,0,248,247,
	1,0,0,0,249,252,1,0,0,0,250,248,1,0,0,0,250,251,1,0,0,0,251,253,1,0,0,0,
	252,250,1,0,0,0,253,254,5,95,0,0,254,27,1,0,0,0,255,256,5,92,0,0,256,257,
	5,105,0,0,257,258,5,110,0,0,258,259,5,116,0,0,259,263,1,0,0,0,260,262,7,
	0,0,0,261,260,1,0,0,0,262,265,1,0,0,0,263,261,1,0,0,0,263,264,1,0,0,0,264,
	266,1,0,0,0,265,263,1,0,0,0,266,267,5,95,0,0,267,268,7,1,0,0,268,29,1,0,
	0,0,269,270,5,92,0,0,270,271,5,105,0,0,271,272,5,110,0,0,272,273,5,116,
	0,0,273,277,1,0,0,0,274,276,7,0,0,0,275,274,1,0,0,0,276,279,1,0,0,0,277,
	275,1,0,0,0,277,278,1,0,0,0,278,280,1,0,0,0,279,277,1,0,0,0,280,281,5,95,
	0,0,281,282,7,2,0,0,282,31,1,0,0,0,283,284,5,92,0,0,284,285,5,109,0,0,285,
	286,5,97,0,0,286,287,5,116,0,0,287,288,5,104,0,0,288,289,5,114,0,0,289,
	290,5,109,0,0,290,33,1,0,0,0,291,292,5,92,0,0,292,293,5,102,0,0,293,294,
	5,114,0,0,294,295,5,97,0,0,295,296,5,99,0,0,296,35,1,0,0,0,297,298,5,92,
	0,0,298,299,5,102,0,0,299,300,5,114,0,0,300,301,5,97,0,0,301,302,5,99,0,
	0,302,306,1,0,0,0,303,305,7,0,0,0,304,303,1,0,0,0,305,308,1,0,0,0,306,304,
	1,0,0,0,306,307,1,0,0,0,307,309,1,0,0,0,308,306,1,0,0,0,309,310,7,1,0,0,
	310,311,7,1,0,0,311,37,1,0,0,0,312,313,5,92,0,0,313,314,5,99,0,0,314,315,
	5,100,0,0,315,316,5,111,0,0,316,317,5,116,0,0,317,39,1,0,0,0,318,319,5,
	92,0,0,319,320,5,116,0,0,320,321,5,105,0,0,321,322,5,109,0,0,322,323,5,
	101,0,0,323,324,5,115,0,0,324,41,1,0,0,0,325,326,5,92,0,0,326,327,5,115,
	0,0,327,328,5,113,0,0,328,329,5,114,0,0,329,330,5,116,0,0,330,43,1,0,0,
	0,331,332,5,92,0,0,332,333,5,115,0,0,333,334,5,113,0,0,334,335,5,114,0,
	0,335,336,5,116,0,0,336,340,1,0,0,0,337,339,7,0,0,0,338,337,1,0,0,0,339,
	342,1,0,0,0,340,338,1,0,0,0,340,341,1,0,0,0,341,343,1,0,0,0,342,340,1,0,
	0,0,343,344,7,1,0,0,344,45,1,0,0,0,345,346,5,92,0,0,346,347,5,115,0,0,347,
	348,5,105,0,0,348,349,5,109,0,0,349,47,1,0,0,0,350,351,5,92,0,0,351,352,
	5,97,0,0,352,353,5,112,0,0,353,354,5,112,0,0,354,355,5,114,0,0,355,356,
	5,111,0,0,356,357,5,120,0,0,357,49,1,0,0,0,358,359,5,94,0,0,359,360,5,123,
	0,0,360,361,5,92,0,0,361,362,5,109,0,0,362,363,5,97,0,0,363,364,5,116,0,
	0,364,365,5,104,0,0,365,366,5,114,0,0,366,367,5,109,0,0,367,368,5,123,0,
	0,368,369,5,84,0,0,369,370,5,125,0,0,370,371,5,125,0,0,371,51,1,0,0,0,372,
	373,5,92,0,0,373,53,1,0,0,0,374,375,5,115,0,0,375,376,5,105,0,0,376,377,
	5,110,0,0,377,55,1,0,0,0,378,379,5,99,0,0,379,380,5,111,0,0,380,381,5,115,
	0,0,381,57,1,0,0,0,382,383,5,116,0,0,383,384,5,97,0,0,384,385,5,110,0,0,
	385,59,1,0,0,0,386,387,5,99,0,0,387,388,5,111,0,0,388,389,5,116,0,0,389,
	61,1,0,0,0,390,391,5,115,0,0,391,392,5,101,0,0,392,393,5,99,0,0,393,63,
	1,0,0,0,394,395,5,99,0,0,395,396,5,115,0,0,396,397,5,99,0,0,397,65,1,0,
	0,0,398,399,5,97,0,0,399,400,5,114,0,0,400,401,5,99,0,0,401,402,5,115,0,
	0,402,403,5,105,0,0,403,404,5,110,0,0,404,67,1,0,0,0,405,406,5,97,0,0,406,
	407,5,114,0,0,407,408,5,99,0,0,408,409,5,99,0,0,409,410,5,111,0,0,410,411,
	5,115,0,0,411,69,1,0,0,0,412,413,5,97,0,0,413,414,5,114,0,0,414,415,5,99,
	0,0,415,416,5,116,0,0,416,417,5,97,0,0,417,418,5,110,0,0,418,71,1,0,0,0,
	419,420,5,115,0,0,420,421,5,105,0,0,421,422,5,110,0,0,422,423,5,104,0,0,
	423,73,1,0,0,0,424,425,5,99,0,0,425,426,5,111,0,0,426,427,5,115,0,0,427,
	428,5,104,0,0,428,75,1,0,0,0,429,430,5,116,0,0,430,431,5,97,0,0,431,432,
	5,110,0,0,432,433,5,104,0,0,433,77,1,0,0,0,434,435,5,99,0,0,435,436,5,111,
	0,0,436,437,5,116,0,0,437,438,5,104,0,0,438,79,1,0,0,0,439,440,5,108,0,
	0,440,441,5,110,0,0,441,81,1,0,0,0,442,443,5,108,0,0,443,444,5,111,0,0,
	444,445,5,103,0,0,445,83,1,0,0,0,446,447,5,92,0,0,447,448,5,108,0,0,448,
	449,5,111,0,0,449,450,5,103,0,0,450,454,1,0,0,0,451,453,7,0,0,0,452,451,
	1,0,0,0,453,456,1,0,0,0,454,452,1,0,0,0,454,455,1,0,0,0,455,457,1,0,0,0,
	456,454,1,0,0,0,457,458,5,95,0,0,458,85,1,0,0,0,459,460,5,92,0,0,460,461,
	5,108,0,0,461,462,5,111,0,0,462,463,5,103,0,0,463,467,1,0,0,0,464,466,7,
	0,0,0,465,464,1,0,0,0,466,469,1,0,0,0,467,465,1,0,0,0,467,468,1,0,0,0,468,
	470,1,0,0,0,469,467,1,0,0,0,470,471,5,95,0,0,471,472,7,1,0,0,472,87,1,0,
	0,0,473,474,5,92,0,0,474,475,5,108,0,0,475,476,5,111,0,0,476,477,5,103,
	0,0,477,481,1,0,0,0,478,480,7,0,0,0,479,478,1,0,0,0,480,483,1,0,0,0,481,
	479,1,0,0,0,481,482,1,0,0,0,482,484,1,0,0,0,483,481,1,0,0,0,484,485,5,95,
	0,0,485,486,7,2,0,0,486,89,1,0,0,0,487,488,5,92,0,0,488,489,5,116,0,0,489,
	490,5,101,0,0,490,491,5,120,0,0,491,492,5,116,0,0,492,493,5,123,0,0,493,
	497,1,0,0,0,494,496,9,0,0,0,495,494,1,0,0,0,496,499,1,0,0,0,497,498,1,0,
	0,0,497,495,1,0,0,0,498,500,1,0,0,0,499,497,1,0,0,0,500,501,5,125,0,0,501,
	502,1,0,0,0,502,503,6,44,1,0,503,91,1,0,0,0,504,505,5,92,0,0,505,506,5,
	108,0,0,506,507,5,101,0,0,507,508,5,102,0,0,508,509,5,116,0,0,509,510,1,
	0,0,0,510,511,6,45,1,0,511,93,1,0,0,0,512,513,5,92,0,0,513,514,5,114,0,
	0,514,515,5,105,0,0,515,516,5,103,0,0,516,517,5,104,0,0,517,518,5,116,0,
	0,518,519,1,0,0,0,519,520,6,46,1,0,520,95,1,0,0,0,521,522,5,36,0,0,522,
	523,5,36,0,0,523,524,1,0,0,0,524,525,6,47,1,0,525,97,1,0,0,0,526,527,5,
	43,0,0,527,99,1,0,0,0,528,529,5,45,0,0,529,101,1,0,0,0,530,531,5,94,0,0,
	531,103,1,0,0,0,532,533,5,61,0,0,533,105,1,0,0,0,534,535,5,60,0,0,535,107,
	1,0,0,0,536,537,5,62,0,0,537,109,1,0,0,0,538,539,5,92,0,0,539,540,5,108,
	0,0,540,541,5,101,0,0,541,111,1,0,0,0,542,543,5,92,0,0,543,544,5,103,0,
	0,544,545,5,101,0,0,545,113,1,0,0,0,546,547,5,44,0,0,547,115,1,0,0,0,548,
	549,5,94,0,0,549,550,7,1,0,0,550,117,1,0,0,0,551,552,5,94,0,0,552,553,7,
	2,0,0,553,119,1,0,0,0,554,556,3,122,60,0,555,554,1,0,0,0,556,557,1,0,0,
	0,557,555,1,0,0,0,557,558,1,0,0,0,558,559,1,0,0,0,559,563,5,46,0,0,560,
	562,3,122,60,0,561,560,1,0,0,0,562,565,1,0,0,0,563,561,1,0,0,0,563,564,
	1,0,0,0,564,567,1,0,0,0,565,563,1,0,0,0,566,568,3,126,62,0,567,566,1,0,
	0,0,567,568,1,0,0,0,568,587,1,0,0,0,569,571,5,46,0,0,570,572,3,122,60,0,
	571,570,1,0,0,0,572,573,1,0,0,0,573,571,1,0,0,0,573,574,1,0,0,0,574,576,
	1,0,0,0,575,577,3,126,62,0,576,575,1,0,0,0,576,577,1,0,0,0,577,587,1,0,
	0,0,578,580,3,122,60,0,579,578,1,0,0,0,580,581,1,0,0,0,581,579,1,0,0,0,
	581,582,1,0,0,0,582,584,1,0,0,0,583,585,3,126,62,0,584,583,1,0,0,0,584,
	585,1,0,0,0,585,587,1,0,0,0,586,555,1,0,0,0,586,569,1,0,0,0,586,579,1,0,
	0,0,587,121,1,0,0,0,588,589,7,1,0,0,589,123,1,0,0,0,590,594,7,2,0,0,591,
	593,7,3,0,0,592,591,1,0,0,0,593,596,1,0,0,0,594,592,1,0,0,0,594,595,1,0,
	0,0,595,125,1,0,0,0,596,594,1,0,0,0,597,599,7,4,0,0,598,600,7,5,0,0,599,
	598,1,0,0,0,599,600,1,0,0,0,600,602,1,0,0,0,601,603,3,122,60,0,602,601,
	1,0,0,0,603,604,1,0,0,0,604,602,1,0,0,0,604,605,1,0,0,0,605,127,1,0,0,0,
	606,746,5,92,0,0,607,608,5,97,0,0,608,609,5,108,0,0,609,610,5,112,0,0,610,
	611,5,104,0,0,611,747,5,97,0,0,612,613,5,98,0,0,613,614,5,101,0,0,614,615,
	5,116,0,0,615,747,5,97,0,0,616,617,5,103,0,0,617,618,5,97,0,0,618,619,5,
	109,0,0,619,620,5,109,0,0,620,747,5,97,0,0,621,622,5,100,0,0,622,623,5,
	101,0,0,623,624,5,108,0,0,624,625,5,116,0,0,625,747,5,97,0,0,626,627,5,
	101,0,0,627,628,5,112,0,0,628,629,5,115,0,0,629,630,5,105,0,0,630,631,5,
	108,0,0,631,632,5,111,0,0,632,747,5,110,0,0,633,634,5,122,0,0,634,635,5,
	101,0,0,635,636,5,116,0,0,636,747,5,97,0,0,637,638,5,101,0,0,638,639,5,
	116,0,0,639,747,5,97,0,0,640,641,5,116,0,0,641,642,5,104,0,0,642,643,5,
	101,0,0,643,644,5,116,0,0,644,747,5,97,0,0,645,646,5,105,0,0,646,647,5,
	111,0,0,647,648,5,116,0,0,648,747,5,97,0,0,649,650,5,107,0,0,650,651,5,
	97,0,0,651,652,5,112,0,0,652,653,5,112,0,0,653,747,5,97,0,0,654,655,5,108,
	0,0,655,656,5,97,0,0,656,657,5,109,0,0,657,658,5,98,0,0,658,659,5,100,0,
	0,659,747,5,97,0,0,660,661,5,109,0,0,661,747,5,117,0,0,662,663,5,110,0,
	0,663,747,5,117,0,0,664,665,5,120,0,0,665,747,5,105,0,0,666,667,5,114,0,
	0,667,668,5,104,0,0,668,747,5,111,0,0,669,670,5,115,0,0,670,671,5,105,0,
	0,671,672,5,103,0,0,672,673,5,109,0,0,673,747,5,97,0,0,674,675,5,116,0,
	0,675,676,5,97,0,0,676,747,5,117,0,0,677,678,5,117,0,0,678,679,5,112,0,
	0,679,680,5,115,0,0,680,681,5,105,0,0,681,682,5,108,0,0,682,683,5,111,0,
	0,683,747,5,110,0,0,684,685,5,112,0,0,685,686,5,104,0,0,686,747,5,105,0,
	0,687,688,5,99,0,0,688,689,5,104,0,0,689,747,5,105,0,0,690,691,5,112,0,
	0,691,692,5,115,0,0,692,747,5,105,0,0,693,694,5,111,0,0,694,695,5,109,0,
	0,695,696,5,101,0,0,696,697,5,103,0,0,697,747,5,97,0,0,698,699,5,71,0,0,
	699,700,5,97,0,0,700,701,5,109,0,0,701,702,5,109,0,0,702,747,5,97,0,0,703,
	704,5,68,0,0,704,705,5,101,0,0,705,706,5,108,0,0,706,707,5,116,0,0,707,
	747,5,97,0,0,708,709,5,84,0,0,709,710,5,104,0,0,710,711,5,101,0,0,711,712,
	5,116,0,0,712,747,5,97,0,0,713,714,5,76,0,0,714,715,5,97,0,0,715,716,5,
	109,0,0,716,717,5,98,0,0,717,718,5,100,0,0,718,747,5,97,0,0,719,720,5,88,
	0,0,720,747,5,105,0,0,721,722,5,80,0,0,722,747,5,105,0,0,723,724,5,83,0,
	0,724,725,5,105,0,0,725,726,5,103,0,0,726,727,5,109,0,0,727,747,5,97,0,
	0,728,729,5,85,0,0,729,730,5,112,0,0,730,731,5,115,0,0,731,732,5,105,0,
	0,732,733,5,108,0,0,733,734,5,111,0,0,734,747,5,110,0,0,735,736,5,80,0,
	0,736,737,5,104,0,0,737,747,5,105,0,0,738,739,5,80,0,0,739,740,5,115,0,
	0,740,747,5,105,0,0,741,742,5,79,0,0,742,743,5,109,0,0,743,744,5,101,0,
	0,744,745,5,103,0,0,745,747,5,97,0,0,746,607,1,0,0,0,746,612,1,0,0,0,746,
	616,1,0,0,0,746,621,1,0,0,0,746,626,1,0,0,0,746,633,1,0,0,0,746,637,1,0,
	0,0,746,640,1,0,0,0,746,645,1,0,0,0,746,649,1,0,0,0,746,654,1,0,0,0,746,
	660,1,0,0,0,746,662,1,0,0,0,746,664,1,0,0,0,746,666,1,0,0,0,746,669,1,0,
	0,0,746,674,1,0,0,0,746,677,1,0,0,0,746,684,1,0,0,0,746,687,1,0,0,0,746,
	690,1,0,0,0,746,693,1,0,0,0,746,698,1,0,0,0,746,703,1,0,0,0,746,708,1,0,
	0,0,746,713,1,0,0,0,746,719,1,0,0,0,746,721,1,0,0,0,746,723,1,0,0,0,746,
	728,1,0,0,0,746,735,1,0,0,0,746,738,1,0,0,0,746,741,1,0,0,0,747,129,1,0,
	0,0,748,749,5,92,0,0,749,750,5,98,0,0,750,751,5,101,0,0,751,752,5,103,0,
	0,752,753,5,105,0,0,753,754,5,110,0,0,754,755,5,123,0,0,755,756,5,98,0,
	0,756,757,5,109,0,0,757,758,5,97,0,0,758,759,5,116,0,0,759,760,5,114,0,
	0,760,761,5,105,0,0,761,762,5,120,0,0,762,763,5,125,0,0,763,131,1,0,0,0,
	764,765,5,92,0,0,765,766,5,101,0,0,766,767,5,110,0,0,767,768,5,100,0,0,
	768,769,5,123,0,0,769,770,5,98,0,0,770,771,5,109,0,0,771,772,5,97,0,0,772,
	773,5,116,0,0,773,774,5,114,0,0,774,775,5,105,0,0,775,776,5,120,0,0,776,
	777,5,125,0,0,777,133,1,0,0,0,778,779,5,38,0,0,779,135,1,0,0,0,780,781,
	5,92,0,0,781,782,5,92,0,0,782,137,1,0,0,0,783,785,7,0,0,0,784,783,1,0,0,
	0,785,788,1,0,0,0,786,784,1,0,0,0,786,787,1,0,0,0,787,789,1,0,0,0,788,786,
	1,0,0,0,789,790,5,95,0,0,790,791,5,123,0,0,791,793,1,0,0,0,792,794,7,3,
	0,0,793,792,1,0,0,0,794,795,1,0,0,0,795,793,1,0,0,0,795,796,1,0,0,0,796,
	797,1,0,0,0,797,807,5,125,0,0,798,800,7,0,0,0,799,798,1,0,0,0,800,803,1,
	0,0,0,801,799,1,0,0,0,801,802,1,0,0,0,802,804,1,0,0,0,803,801,1,0,0,0,804,
	805,5,95,0,0,805,807,7,3,0,0,806,786,1,0,0,0,806,801,1,0,0,0,807,139,1,
	0,0,0,808,809,5,94,0,0,809,810,7,2,0,0,810,811,3,138,68,0,811,141,1,0,0,
	0,812,815,3,124,61,0,813,815,3,128,63,0,814,812,1,0,0,0,814,813,1,0,0,0,
	815,817,1,0,0,0,816,818,3,138,68,0,817,816,1,0,0,0,817,818,1,0,0,0,818,
	143,1,0,0,0,819,821,7,6,0,0,820,819,1,0,0,0,821,822,1,0,0,0,822,820,1,0,
	0,0,822,823,1,0,0,0,823,824,1,0,0,0,824,825,6,71,1,0,825,145,1,0,0,0,826,
	827,5,92,0,0,827,828,5,32,0,0,828,829,1,0,0,0,829,830,6,72,1,0,830,147,
	1,0,0,0,831,832,5,92,0,0,832,833,5,58,0,0,833,834,1,0,0,0,834,835,6,73,
	1,0,835,149,1,0,0,0,836,837,9,0,0,0,837,151,1,0,0,0,838,839,5,93,0,0,839,
	840,1,0,0,0,840,841,6,75,2,0,841,153,1,0,0,0,842,843,5,92,0,0,843,844,5,
	114,0,0,844,845,5,98,0,0,845,846,5,114,0,0,846,847,5,97,0,0,847,848,5,99,
	0,0,848,849,5,107,0,0,849,850,1,0,0,0,850,851,6,76,2,0,851,155,1,0,0,0,
	852,853,5,92,0,0,853,854,5,102,0,0,854,855,5,114,0,0,855,856,5,97,0,0,856,
	857,5,99,0,0,857,157,1,0,0,0,858,859,5,92,0,0,859,860,5,102,0,0,860,861,
	5,114,0,0,861,862,5,97,0,0,862,863,5,99,0,0,863,867,1,0,0,0,864,866,7,0,
	0,0,865,864,1,0,0,0,866,869,1,0,0,0,867,865,1,0,0,0,867,868,1,0,0,0,868,
	870,1,0,0,0,869,867,1,0,0,0,870,871,7,1,0,0,871,872,7,1,0,0,872,159,1,0,
	0,0,873,874,5,92,0,0,874,875,5,99,0,0,875,876,5,100,0,0,876,877,5,111,0,
	0,877,878,5,116,0,0,878,161,1,0,0,0,879,880,5,92,0,0,880,881,5,116,0,0,
	881,882,5,105,0,0,882,883,5,109,0,0,883,884,5,101,0,0,884,885,5,115,0,0,
	885,163,1,0,0,0,886,887,5,92,0,0,887,888,5,115,0,0,888,889,5,113,0,0,889,
	890,5,114,0,0,890,891,5,116,0,0,891,165,1,0,0,0,892,893,5,44,0,0,893,167,
	1,0,0,0,894,895,5,94,0,0,895,169,1,0,0,0,896,900,7,2,0,0,897,899,7,3,0,
	0,898,897,1,0,0,0,899,902,1,0,0,0,900,898,1,0,0,0,900,901,1,0,0,0,901,171,
	1,0,0,0,902,900,1,0,0,0,903,904,5,40,0,0,904,173,1,0,0,0,905,906,5,41,0,
	0,906,175,1,0,0,0,907,908,5,123,0,0,908,177,1,0,0,0,909,910,5,125,0,0,910,
	179,1,0,0,0,911,912,5,49,0,0,912,181,1,0,0,0,913,915,5,45,0,0,914,913,1,
	0,0,0,914,915,1,0,0,0,915,917,1,0,0,0,916,918,3,184,91,0,917,916,1,0,0,
	0,918,919,1,0,0,0,919,917,1,0,0,0,919,920,1,0,0,0,920,921,1,0,0,0,921,925,
	5,46,0,0,922,924,3,184,91,0,923,922,1,0,0,0,924,927,1,0,0,0,925,923,1,0,
	0,0,925,926,1,0,0,0,926,946,1,0,0,0,927,925,1,0,0,0,928,930,5,45,0,0,929,
	928,1,0,0,0,929,930,1,0,0,0,930,931,1,0,0,0,931,933,5,46,0,0,932,934,3,
	184,91,0,933,932,1,0,0,0,934,935,1,0,0,0,935,933,1,0,0,0,935,936,1,0,0,
	0,936,946,1,0,0,0,937,939,5,45,0,0,938,937,1,0,0,0,938,939,1,0,0,0,939,
	941,1,0,0,0,940,942,3,184,91,0,941,940,1,0,0,0,942,943,1,0,0,0,943,941,
	1,0,0,0,943,944,1,0,0,0,944,946,1,0,0,0,945,914,1,0,0,0,945,929,1,0,0,0,
	945,938,1,0,0,0,946,183,1,0,0,0,947,948,7,1,0,0,948,185,1,0,0,0,949,950,
	5,92,0,0,950,951,5,108,0,0,951,952,5,101,0,0,952,953,5,102,0,0,953,954,
	5,116,0,0,954,955,1,0,0,0,955,956,6,92,1,0,956,187,1,0,0,0,957,958,5,92,
	0,0,958,959,5,114,0,0,959,960,5,105,0,0,960,961,5,103,0,0,961,962,5,104,
	0,0,962,963,5,116,0,0,963,964,1,0,0,0,964,965,6,93,1,0,965,189,1,0,0,0,
	966,968,7,6,0,0,967,966,1,0,0,0,968,969,1,0,0,0,969,967,1,0,0,0,969,970,
	1,0,0,0,970,971,1,0,0,0,971,972,6,94,1,0,972,191,1,0,0,0,973,974,5,92,0,
	0,974,975,5,32,0,0,975,976,1,0,0,0,976,977,6,95,1,0,977,193,1,0,0,0,978,
	979,9,0,0,0,979,195,1,0,0,0,42,0,1,229,250,263,277,306,340,454,467,481,
	497,557,563,567,573,576,581,584,586,594,599,604,746,786,795,801,806,814,
	817,822,867,900,914,919,925,929,935,938,943,945,969,3,2,1,0,6,0,0,2,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LatexLexer.__ATN) {
			LatexLexer.__ATN = new ATNDeserializer().deserialize(LatexLexer._serializedATN);
		}

		return LatexLexer.__ATN;
	}


	static DecisionsToDFA = LatexLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}