export const GREEK_CHARS = new Set(['alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta',
  'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu',
  'xi', 'pi', 'rho', 'sigma', 'tau', 'upsilon', 'phi', 'chi',
  'psi', 'omega', 'Gamma', 'Delta', 'Theta', 'Lambda',
  'Xi', 'Pi', 'Sigma', 'Upsilon', 'Phi', 'Psi', 'Omega']);

export const UNASSIGNABLE = new Set(["I", "E", "pi"]);

export const ZERO_PLACEHOLDER = "implicit_param__zero";

export const BUILTIN_FUNCTION_MAP = new Map([
  ['max', '_Max'],
  ['min', '_Min'],
  ['real', '_re'],
  ['imag', '_im'],
  ['conj', '_conjugate'],
  ['angle', '_arg'],
  ['inv', '_Inverse'],
  ['det', '_Determinant'],
  ['transpose', '_Transpose'],
  ['norm', '_norm'],
  ['dot', '_dot'],
  ['floor', '_floor'],
  ['ceil', '_ceil'],
  ['round', '_round'],
  ['range', '_range'],
  ['count', '_count'],
  ['sum', '_sum'],
  ['average', '_average'],
  ['stdev', '_stdev'],
  ['stdevp', '_stdevp'],
  ['numrows', '_numrows'],
  ['numcols', '_numcols']
]);

export const COMPARISON_MAP = new Map([
  ["<", "_StrictLessThan"],
  ["\\le", "_LessThan"],
  [">", "_StrictGreaterThan"],
  ["\\ge", "_GreaterThan"]
])

export const UNITS_WITH_OFFSET = new Set(['degC', 'degF', 'celsius', 'fahrenheit']);

export const TYPE_PARSING_ERRORS = {
  math: "This field must contain an assignment (e.g., x=y*z) or a query (e.g., x=). To delete an unwanted math cell, click the trash can on the right.",
  plot: "This field must contain a function query with an input parameter range using the format y(-10 ≤ x ≤ 10)=, a query with a pair of scalars or vectors separated by a comma using the format (a,b)=, or a query with a parametric expression using the format (sin(s), cos(s)) for (0 ≤ s ≤ 2*pi)=",
  parameter: "A variable name is required in this field.",
  units: "This field may only contain units in square brackets or may be left blank to indicate no units.",
  expression: "This field may only contain a valid expression or number without an equals sign or it may be blank.",
  expression_no_blank: "This field may only contain a valid expression or number without an equals sign.",
  number: "This field may only contain a number since units are specified for this column.",
  condition: "This field may only contain a condition statement such as x>1. The expression corresponding to the first satisfied condition will be used.",
  piecewise: "Syntax Error",
  equality: "An equation is required in this field.",
  id_list: "A variable name, or a list of variable names separated by commas, is required in this field (x,y for example). If a numerical solve is required, the variables must be given initial guess values with a tilde (x~1, y~2, for example).",
  data_table_expression: "A variable name or an assignment is required in this field."
};


// SymPy and Python have many reserved names
// These will get remapped so the user can still use these as variable names
// This is is generated using notebooks/reserved_ids.ipynb
export const RESERVED = new Set([
  "MatMul",
  "plot",
  "PowerSet",
  "terms_gcd",
  "dotprint",
  "cacheit",
  "GramSchmidt",
  "UnevaluatedExpr",
  "composite",
  "has_dups",
  "mathieucprime",
  "hermite_prob",
  "ComplexField",
  "MatPow",
  "hessian",
  "hn1",
  "jn_zeros",
  "solve_univariate_inequality",
  "credits",
  "vars",
  "Contains",
  "real_roots",
  "assemble_partfrac_list",
  "Complexes",
  "vring",
  "epath",
  "numer",
  "gff",
  "line_integrate",
  "lucas",
  "Curve",
  "Ellipse",
  "reduce_abs_inequality",
  "intt",
  "factorrat",
  "capture",
  "cancel",
  "Point2D",
  "gammasimp",
  "polar_lift",
  "chebyshevt_root",
  "EXRAW",
  "SystemExit",
  "Rational",
  "together",
  "ValueError",
  "ode_order",
  "DiagonalOf",
  "return",
  "getattr",
  "limit",
  "minimum",
  "NumberSymbol",
  "decompogen",
  "lowergamma",
  "ImageSet",
  "floor",
  "ground_roots",
  "assoc_legendre",
  "multiplicity",
  "PythonIntegerRing",
  "nfloat",
  "rsolve_ratio",
  "jacobi_normalized",
  "tensorcontraction",
  "finally",
  "from",
  "sqf_list",
  "FourierTransform",
  "inverse_cosine_transform",
  "adjoint",
  "Sieve",
  "GeneratorExit",
  "bool",
  "print",
  "bytearray",
  "farthest_points",
  "kroneckersimp",
  "denom",
  "setattr",
  "And",
  "break",
  "unpolarify",
  "filter",
  "reversed",
  "sin",
  "limit_seq",
  "RootSum",
  "closest_points",
  "pollard_rho",
  "Domain",
  "rcode",
  "cyclotomic_poly",
  "stieltjes",
  "root",
  "HadamardPower",
  "maximum",
  "NonSquareMatrixError",
  "Nand",
  "is",
  "EnvironmentError",
  "SingularityFunction",
  "rsolve_poly",
  "Order",
  "FU",
  "QQ",
  "chebyshevu",
  "numbered_symbols",
  "ImmutableSparseMatrix",
  "stationary_points",
  "trace",
  "is_strictly_decreasing",
  "rot_axis1",
  "multigamma",
  "rational_interpolate",
  "Ei",
  "KeyboardInterrupt",
  "Ci",
  "Reals",
  "signsimp",
  "is_zero_dimensional",
  "singularities",
  "loggamma",
  "filldedent",
  "for",
  "UnboundLocalError",
  "idiff",
  "Catalan",
  "InterruptedError",
  "apply_finite_diff",
  "GeometryError",
  "FractionField",
  "blockcut",
  "OperationNotSupported",
  "approximants",
  "GeneratorsNeeded",
  "deg",
  "print_fcode",
  "quit",
  "TimeoutError",
  "Wild",
  "periodic_argument",
  "ProcessLookupError",
  "Array",
  "besselj",
  "sign",
  "inverse_mellin_transform",
  "airyaiprime",
  "Eq",
  "Circle",
  "factor",
  "matrix2numpy",
  "tensor",
  "unflatten",
  "julia_code",
  "cbrt",
  "jacobi",
  "ComplexRegion",
  "pretty",
  "ring",
  "MatrixBase",
  "permutedims",
  "refine",
  "mathieusprime",
  "FutureWarning",
  "mersenne_prime_exponent",
  "GeneratorsError",
  "Le",
  "OneMatrix",
  "subsets",
  "memoize_property",
  "GMPYRationalField",
  "parse_expr",
  "FileNotFoundError",
  "has_variety",
  "DenseNDimArray",
  "class",
  "sqrt_mod_iter",
  "pager_print",
  "mathieuc",
  "prime_valuation",
  "factor_list",
  "hadamard_product",
  "mobius_transform",
  "sech",
  "threaded",
  "hex",
  "MatrixPermute",
  "acsch",
  "airybi",
  "combsimp",
  "continued_fraction",
  "harmonic",
  "in",
  "NDimArray",
  "is_perfect",
  "utilities",
  "Segment",
  "interpolating_spline",
  "SparseMatrix",
  "Matrix",
  "MatrixExpr",
  "E",
  "Or",
  "Ynm",
  "shape",
  "poly",
  "solveset",
  "differentiate_finite",
  "print_rcode",
  "classmethod",
  "AttributeError",
  "runfile",
  "GMPYIntegerRing",
  "polarify",
  "fwht",
  "sqrt_mod",
  "nonlocal",
  "MatrixSlice",
  "series",
  "concrete",
  "display",
  "locals",
  "is_quad_residue",
  "refine_root",
  "LM",
  "binomial",
  "pdiv",
  "Abs",
  "jscode",
  "solve_undetermined_coeffs",
  "def",
  "Unequality",
  "WildFunction",
  "coth",
  "and",
  "chebyshevt_poly",
  "PermissionError",
  "check_assumptions",
  "anext",
  "dict",
  "intersection",
  "type",
  "fresnels",
  "trigamma",
  "Quaternion",
  "rotations",
  "Subs",
  "ChildProcessError",
  "compile",
  "UnivariatePolynomialError",
  "expand_power_exp",
  "xfield",
  "exit",
  "BlockMatrix",
  "minimal_polynomial",
  "imageset",
  "InverseLaplaceTransform",
  "Idx",
  "release",
  "Integers",
  "set",
  "Atom",
  "Basic",
  "Min",
  "Not",
  "RationalField",
  "Rem",
  "Predicate",
  "print_jscode",
  "reduced_totient",
  "sieve",
  "to_nnf",
  "SeqMul",
  "im",
  "Integer",
  "Parabola",
  "UnicodeEncodeError",
  "quadratic_residues",
  "laplace_transform",
  "banded",
  "gcd_terms",
  "poly_from_expr",
  "rust_code",
  "sqf",
  "Set",
  "decompose",
  "frac",
  "all",
  "fresnelc",
  "UniversalSet",
  "Polygon",
  "betainc",
  "centroid",
  "ImportError",
  "help",
  "default_sort_key",
  "legendre_poly",
  "SystemError",
  "register_handler",
  "cxxcode",
  "invert",
  "real_root",
  "hyper",
  "pollard_pm1",
  "TabError",
  "airybiprime",
  "satisfiable",
  "prod",
  "get_indices",
  "inv_quick",
  "piecewise_fold",
  "Point3D",
  "open",
  "LC",
  "per",
  "Ray3D",
  "periodicity",
  "expand_func",
  "frozenset",
  "polys",
  "Segment2D",
  "Heaviside",
  "residue",
  "ImmutableDenseMatrix",
  "ArithmeticError",
  "separatevars",
  "CoercionFailed",
  "horner",
  "ImportWarning",
  "range",
  "S",
  "hankel1",
  "topological_sort",
  "smtlib_code",
  "take",
  "uppergamma",
  "Line",
  "singularityintegrate",
  "Float",
  "ascii",
  "log",
  "interactive_traversal",
  "li",
  "unbranched_argument",
  "Transpose",
  "degree",
  "det",
  "QQ_gmpy",
  "finite_diff_weights",
  "lambdify",
  "acsc",
  "posify",
  "powdenest",
  "rot_ccw_axis1",
  "ExpressionDomain",
  "symbols",
  "import",
  "Ge",
  "fraction",
  "RR",
  "mathieus",
  "csc",
  "randprime",
  "simplify",
  "is_strictly_increasing",
  "is_mersenne_prime",
  "SymmetricDifference",
  "ImmutableMatrix",
  "LessThan",
  "init_printing",
  "min",
  "discriminant",
  "sorted",
  "isolate",
  "comp",
  "asinh",
  "interactive",
  "linear_eq_to_matrix",
  "Range",
  "chebyshevu_poly",
  "reduced",
  "round_two",
  "block_collapse",
  "ConnectionError",
  "Complement",
  "pprint_try_use_unicode",
  "besselk",
  "mellin_transform",
  "Equality",
  "CRootOf",
  "ITE",
  "IndexError",
  "RuntimeWarning",
  "Warning",
  "geometry",
  "arity",
  "lex",
  "variations",
  "GroebnerBasis",
  "as",
  "assoc_laguerre",
  "ordered",
  "postfixes",
  "pde_separate_mul",
  "ceiling",
  "await",
  "continued_fraction_periodic",
  "perfect_power",
  "primitive",
  "RegularPolygon",
  "expand_log",
  "multiline_latex",
  "atan2",
  "eye",
  "ReferenceError",
  "IntegerRing",
  "O",
  "hyperexpand",
  "eval",
  "fcode",
  "dirichlet_eta",
  "cosh",
  "elliptic_k",
  "del",
  "False",
  "grlex",
  "MutableDenseNDimArray",
  "EOFError",
  "jn",
  "DiracDelta",
  "StrictGreaterThan",
  "jordan_cell",
  "seterr",
  "to_dnf",
  "staticmethod",
  "checkpdesol",
  "zeros",
  "isinstance",
  "cofactors",
  "trunc",
  "divisors",
  "PolificationFailed",
  "Plane",
  "linsolve",
  "matrix_symbols",
  "bool_map",
  "gamma",
  "hn2",
  "reshape",
  "property",
  "gcdex",
  "textplot",
  "tensordiagonal",
  "groebner",
  "input",
  "true",
  "homogeneous_order",
  "copyright",
  "pexquo",
  "inverse_laplace_transform",
  "primepi",
  "discrete",
  "Naturals0",
  "collect",
  "RefinementFailed",
  "intersecting_product",
  "factorint",
  "IsADirectoryError",
  "hasattr",
  "AccumBounds",
  "EvaluationFailed",
  "gcd_list",
  "gruntz",
  "Q",
  "primitive_root",
  "sfield",
  "postorder_traversal",
  "catalan",
  "evaluate",
  "OSError",
  "NotImplemented",
  "Gt",
  "laplace_initial_conds",
  "lcm",
  "pprint",
  "inverse_sine_transform",
  "Sum",
  "mobius",
  "tuple",
  "EmptySet",
  "ConditionSet",
  "Ordinal",
  "fps",
  "ZZ",
  "Ellipsis",
  "MemoryError",
  "SOPform",
  "FiniteField",
  "PermutationMatrix",
  "elliptic_pi",
  "elliptic_f",
  "factor_terms",
  "total_degree",
  "AssertionError",
  "acos",
  "assuming",
  "Function",
  "SeqAdd",
  "oo",
  "primerange",
  "tan",
  "timed",
  "OverflowError",
  "sstr",
  "asec",
  "Piecewise",
  "tensorproduct",
  "reduce_abs_inequalities",
  "matrix_multiply_elementwise",
  "randMatrix",
  "id",
  "QQ_I",
  "grevlex",
  "roots",
  "ExactQuotientFailed",
  "UnicodeTranslateError",
  "hash",
  "plot_backends",
  "are_similar",
  "inverse_hankel_transform",
  "gcd",
  "FallingFactorial",
  "Identity",
  "memoryview",
  "monic",
  "FloatingPointError",
  "sring",
  "rot_givens",
  "KroneckerDelta",
  "var",
  "count_ops",
  "casoratian",
  "NotAlgebraic",
  "dsolve",
  "ord0",
  "is_increasing",
  "continue",
  "prime",
  "subresultants",
  "QQ_python",
  "AppliedPredicate",
  "AlgebraicNumber",
  "erf",
  "InverseMellinTransform",
  "UnificationFailed",
  "ModuleNotFoundError",
  "compositepi",
  "DiagonalMatrix",
  "OmegaPower",
  "powsimp",
  "LookupError",
  "exp_polar",
  "Determinant",
  "IndexedBase",
  "get_ipython",
  "is_abundant",
  "num_digits",
  "strategies",
  "ZZ_gmpy",
  "expand_complex",
  "fourier_series",
  "calculus",
  "div",
  "bytes",
  "SineTransform",
  "ff",
  "IndentationError",
  "print_gtk",
  "digamma",
  "MutableDenseMatrix",
  "motzkin",
  "assumptions",
  "ShapeError",
  "covering_product",
  "Product",
  "MatAdd",
  "wronskian",
  "DiagMatrix",
  "xthreaded",
  "dict_merge",
  "IOError",
  "classify_ode",
  "product",
  "convex_hull",
  "primitive_element",
  "RealField",
  "bernoulli",
  "discrete_log",
  "integer_log",
  "difference_delta",
  "sequence",
  "solve_linear",
  "Number",
  "Xor",
  "chebyshevu_root",
  "pquo",
  "erf2",
  "async",
  "content",
  "hermite_prob_poly",
  "gff_list",
  "TypeError",
  "KeyError",
  "Interval",
  "AlgebraicField",
  "Lt",
  "erfinv",
  "preorder_traversal",
  "not_empty_in",
  "compose",
  "solve_poly_inequality",
  "CC",
  "mod_inverse",
  "srepr",
  "solve_triangulated",
  "PrecisionExhausted",
  "Naturals",
  "evalf",
  "BaseException",
  "FlagError",
  "aiter",
  "exec",
  "chebyshevt",
  "chr",
  "print_latex",
  "airyai",
  "BlockingIOError",
  "I",
  "acot",
  "sturm",
  "to_number_field",
  "Expr",
  "HeuristicGCDFailed",
  "diophantine",
  "hypersimilar",
  "GoldenRatio",
  "resultant",
  "LeviCivita",
  "genocchi",
  "prefixes",
  "except",
  "Adjoint",
  "PolynomialRing",
  "convolution",
  "arg",
  "get_contraction_structure",
  "FF_gmpy",
  "half_gcdex",
  "marcumq",
  "InverseCosineTransform",
  "fft",
  "ProductSet",
  "to_cnf",
  "Mod",
  "Ray",
  "igrevlex",
  "zoo",
  "piecewise_exclusive",
  "primefactors",
  "fu",
  "rcollect",
  "TribonacciConstant",
  "ExtraneousFactors",
  "GreaterThan",
  "SparseNDimArray",
  "factorial",
  "StrPrinter",
  "expand",
  "PurePoly",
  "elif",
  "Line2D",
  "SympifyError",
  "NotReversible",
  "ilex",
  "galois_group",
  "proper_divisor_count",
  "DomainError",
  "BytesWarning",
  "ntheory",
  "HankelTransform",
  "cot",
  "checksol",
  "expand_power_base",
  "failing_assumptions",
  "latex",
  "solve_linear_system",
  "trailing",
  "float",
  "Eijk",
  "all_roots",
  "ntt",
  "issubclass",
  "HomomorphismFailed",
  "Lambda",
  "is_monotonic",
  "proper_divisors",
  "breakpoint",
  "subfactorial",
  "euler_equations",
  "logcombine",
  "while",
  "legendre_symbol",
  "EulerGamma",
  "elliptic_e",
  "plotting",
  "substitution",
  "sympify",
  "nsimplify",
  "atanh",
  "hermite_poly",
  "euler",
  "In",
  "Monomial",
  "functions",
  "FunctionMatrix",
  "UserWarning",
  "symarray",
  "count_roots",
  "diagonalize_vector",
  "Rationals",
  "false",
  "cse",
  "prem",
  "DotProduct",
  "len",
  "ask",
  "riemann_xi",
  "Implies",
  "raise",
  "map",
  "Si",
  "fourier_transform",
  "plot_parametric",
  "NameError",
  "super",
  "tanh",
  "field",
  "hypersimp",
  "SeqPer",
  "legendre",
  "pow",
  "algebras",
  "isprime",
  "not",
  "solve_linear_system_LU",
  "FiniteSet",
  "laguerre_poly",
  "Limit",
  "igcd",
  "RootOf",
  "Poly",
  "Rel",
  "csch",
  "yield",
  "max",
  "True",
  "factor_nc",
  "EmptySequence",
  "inverse_mobius_transform",
  "rot_axis2",
  "rot_ccw_axis3",
  "any",
  "with",
  "GF",
  "exptrigsimp",
  "erfi",
  "pretty_print",
  "continued_fraction_convergents",
  "init_session",
  "parsing",
  "rem",
  "RecursionError",
  "DeferredVector",
  "multinomial_coefficients",
  "radsimp",
  "hankel_transform",
  "n_order",
  "str",
  "transpose",
  "plot_implicit",
  "Symbol",
  "mathml",
  "ifwht",
  "if",
  "diff",
  "PythonFiniteField",
  "ifft",
  "Point",
  "factorial2",
  "is_carmichael",
  "Indexed",
  "EPath",
  "degree_list",
  "nan",
  "sqrtdenest",
  "sift",
  "Nor",
  "SyntaxWarning",
  "rsolve_hyper",
  "InverseSineTransform",
  "BrokenPipeError",
  "swinnerton_dyer_poly",
  "abs",
  "beta",
  "parallel_poly_from_expr",
  "besseli",
  "use",
  "Equivalent",
  "checkodesol",
  "prime_decomp",
  "betainc_regularized",
  "sinc",
  "ratsimp",
  "object",
  "Shi",
  "Options",
  "field_isomorphism",
  "bspline_basis",
  "zip",
  "InverseFourierTransform",
  "CosineTransform",
  "bottom_up",
  "andre",
  "DisjointUnion",
  "collect_const",
  "enumerate",
  "Line3D",
  "is_decreasing",
  "BlockDiagMatrix",
  "MellinTransform",
  "solve",
  "int",
  "ConnectionResetError",
  "rot_axis3",
  "NotImplementedError",
  "next",
  "globals",
  "printing",
  "bessely",
  "N",
  "sstrrepr",
  "Permanent",
  "sum",
  "binomial_coefficients_list",
  "jacobi_poly",
  "nthroot_mod",
  "PolynomialError",
  "expand_mul",
  "delattr",
  "ln",
  "integer_nthroot",
  "Ynm_c",
  "sqrt",
  "zeta",
  "assert",
  "python",
  "classify_pde",
  "interpolating_poly",
  "rot_ccw_axis2",
  "EX",
  "ComplexRootOf",
  "MultivariatePolynomialError",
  "flatten",
  "print_python",
  "cosine_transform",
  "ResourceWarning",
  "multipledispatch",
  "None",
  "apart",
  "ZZ_I",
  "continued_fraction_reduce",
  "quadratic_congruence",
  "Ne",
  "license",
  "Chi",
  "sqf_part",
  "atan",
  "is_primitive_root",
  "print_tree",
  "Tuple",
  "StopAsyncIteration",
  "MutableSparseMatrix",
  "random_poly",
  "ccode",
  "trigsimp",
  "is_amicable",
  "lambda",
  "ZZ_python",
  "Add",
  "derive_by_array",
  "itermonomials",
  "Max",
  "abundance",
  "acoth",
  "FF_python",
  "nsolve",
  "principal_branch",
  "lerchphi",
  "ImmutableDenseNDimArray",
  "BasePolynomialError",
  "viete",
  "sec",
  "pycode",
  "expand_trig",
  "bell",
  "pprint_use_unicode",
  "sinh",
  "list",
  "SeqFormula",
  "cartes",
  "ZeroDivisionError",
  "dir",
  "Mul",
  "is_deficient",
  "re",
  "rsolve",
  "slice",
  "integrate",
  "E1",
  "Ray2D",
  "xring",
  "pass",
  "print_glsl",
  "primenu",
  "oct",
  "npartitions",
  "totient",
  "PolynomialDivisionFailed",
  "kronecker_product",
  "PoleError",
  "OptionError",
  "appellf1",
  "exp",
  "preview",
  "Triangle",
  "besselsimp",
  "Pow",
  "group",
  "quo",
  "NotADirectoryError",
  "round",
  "Id",
  "print_maple_code",
  "AtomicExpr",
  "divisor_sigma",
  "vfield",
  "GMPYFiniteField",
  "simplify_logic",
  "maple_code",
  "EncodingWarning",
  "erfc",
  "callable",
  "glsl_code",
  "ImmutableSparseNDimArray",
  "acosh",
  "ilcm",
  "rad",
  "MatrixSymbol",
  "exquo",
  "jacobi_symbol",
  "symmetric_poly",
  "cos",
  "kronecker_symbol",
  "minpoly",
  "LaplaceTransform",
  "KroneckerProduct",
  "erf2inv",
  "fibonacci",
  "primeomega",
  "solve_rational_inequalities",
  "BufferError",
  "DeprecationWarning",
  "intervals",
  "hankel2",
  "PendingDeprecationWarning",
  "execfile",
  "interpolate",
  "mathematica_code",
  "complex",
  "inverse_fourier_transform",
  "bspline_basis_set",
  "doctest",
  "vectorize",
  "UnicodeWarning",
  "conjugate",
  "TableForm",
  "hermite",
  "continued_fraction_iterator",
  "iter",
  "print_mathml",
  "bin",
  "MutableMatrix",
  "carmichael",
  "cycle_length",
  "Dummy",
  "is_nthpow_residue",
  "summation",
  "nextprime",
  "polygamma",
  "erfcinv",
  "try",
  "ratsimpmodprime",
  "Exception",
  "Segment3D",
  "Intersection",
  "HadamardProduct",
  "divisor_count",
  "meijerg",
  "polylog",
  "partition",
  "symmetrize",
  "remove_handler",
  "asech",
  "yn",
  "repr",
  "list2numpy",
  "StrictLessThan",
  "ComputationFailed",
  "sqf_norm",
  "is_convex",
  "InverseHankelTransform",
  "LambertW",
  "ConnectionRefusedError",
  "RuntimeError",
  "Out",
  "nonlinsolve",
  "sine_transform",
  "FileExistsError",
  "tribonacci",
  "construct_domain",
  "lcm_list",
  "solve_poly_system",
  "FunctionClass",
  "nroots",
  "MutableSparseNDimArray",
  "binomial_coefficients",
  "det_quick",
  "egyptian_fraction",
  "laguerre",
  "nth_power_roots_poly",
  "rf",
  "rootof",
  "asin",
  "ExceptionGroup",
  "print_ccode",
  "RealNumber",
  "test",
  "expint",
  "diag",
  "else",
  "PythonRational",
  "Inverse",
  "BaseExceptionGroup",
  "ones",
  "ConnectionAbortedError",
  "Trace",
  "SyntaxError",
  "octave_code",
  "IsomorphismFailed",
  "POSform",
  "pdsolve",
  "NotInvertible",
  "public",
  "Znm",
  "prevprime",
  "laplace_correspondence",
  "reduce_inequalities",
  "FF",
  "AssumptionsContext",
  "UnicodeDecodeError",
  "ord",
  "Integral",
  "Li",
  "igrlex",
  "primorial",
  "external",
  "or",
  "ZeroMatrix",
  "pde_separate_add",
  "StopIteration",
  "divmod",
  "RisingFactorial",
  "format",
  "Dict",
  "expand_multinomial",
  "Derivative",
  "LT",
  "Union",
  "gegenbauer",
  "pde_separate",
  "apart_list",
  "UnicodeError",
  "global",
]);
